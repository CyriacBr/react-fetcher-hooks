{"remainingRequest":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js??ref--6-1!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js??ref--6-2!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/hooks/use-request.mdx","dependencies":[{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/hooks/use-request.mdx","mtime":1573919616309},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1572980644110},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js","mtime":1572807047183},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js","mtime":1572980643543},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js","mtime":1572980619128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/hooks/use-request.mdx"],"names":["React","mdx","Preview","UseRequestExample","UseRequestExampleSource","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport 'bulma/css/bulma.css';\nimport '../../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport Preview from '../../src/Preview.tsx';\nimport UseRequestExample from '../../src/components/UseRequestExample';\nimport UseRequestExampleSource from '!raw-loader!../../src/components/UseRequestExample.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"userequest\"\n    }}>{`UseRequest`}</h1>\n    <p>{`This is a simpler version of `}<inlineCode parentName=\"p\">{`useFetcher`}</inlineCode>{` to avoid verbosity.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p><inlineCode parentName=\"p\">{`useRequest(request: (...args: any[]) => AxiosPromise, autoFetch?: boolean)`}</inlineCode><br parentName=\"p\"></br>{`\n`}{`This hook returns a reference, a function to trigger the request, as well as a getter and setter from `}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`.\nYou can use your own axios instance (with configured base path, for example) with `}<inlineCode parentName=\"p\">{`useRequest`}</inlineCode>{`.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const [ref, get, items, setItems] = useRequest(() => axios.get('users'))\n`}</code></pre>\n    <p>{`When passing true to the second argument, fetching will happen as soon as the component renders,\nso there's no need to manually trigger the request on mount.`}</p>\n    <h2 {...{\n      \"id\": \"trigger-function\"\n    }}>{`Trigger Function`}</h2>\n    <p>{`You can pass parameters to the trigger function. For multiple parameters, use an array.`}</p>\n    <Preview tabNames={['JavaScript', 'TypeScript']} mdxType=\"Preview\">\n  <editor>\n        {`const [ref, get, item, setItem] = useRequest((id) => axios.get(\\`users/\\${id}\\`));\nconst [updateRef, update] = useRequest(([id, data]) => axios.patch(\\`users/\\${id}\\`));\nget(1);\nupdate([1, { name: 'foo'}]);\n`}\n  </editor>\n  <editor>\n        {`const [ref, get, item, setItem] = useRequest((id: number) => axios.get<User>(\\`users/\\${id}\\`));\nconst [updateRef, update] = useRequest(([id, data]: [number, User]) => axios.patch(\\`users/\\${id}\\`, data));\nget(1); // type is inferred\nupdate([1, { name: 'foo'}]); // type is inferred\n`}\n  </editor>\n    </Preview>\n    <h3 {...{\n      \"id\": \"callback\"\n    }}>{`Callback`}</h3>\n    <p>{`It is possible to pass a callback to a trigger function. It'll be called once the request is completed.\nWhen an error is encountered, it will not be called.`}</p>\n    <Preview tabNames={['JavaScript', 'TypeScript']} mdxType=\"Preview\">\n  <editor>\n        {`const [ref, get, item, setItem] = useRequest((id) => axios.get(\\`users/\\${id}\\`));\nget(1, result => {\n  // do something\n});\n`}\n  </editor>\n  <editor>\n        {`const [ref, get, item, setItem] = useRequest((id: number) => axios.get<User>(\\`users/\\${id}\\`));\nget(1, result => {\n  // do something\n  // type of result is 'User'\n});\n`}\n  </editor>\n    </Preview>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n\n    <Preview mdxType=\"Preview\">\n  <UseRequestExample mdxType=\"UseRequestExample\" />\n  <editor>{UseRequestExampleSource}</editor>\n    </Preview>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}