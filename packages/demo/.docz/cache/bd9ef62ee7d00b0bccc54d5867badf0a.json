{"remainingRequest":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/babel-loader/lib/index.js??ref--6-1!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/@mdx-js/loader/index.js??ref--6-2!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/source-map-loader/index.js!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/docs/index.mdx","dependencies":[{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/docs/index.mdx","mtime":1565893791881},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1562869367178},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/babel-loader/lib/index.js","mtime":1562869367050},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/@mdx-js/loader/index.js","mtime":1565884443049},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/source-map-loader/index.js","mtime":1562869367869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/docs/index.mdx"],"names":["React","mdx","Preview","BasicExample","BasicExampleSource","HandleExample","HandleExampleSource","LocationExample","LocationSource","ForcedLoadingExample","ForcedLoadingSource","CustomLoaderExample","CustomLoaderSource","ProgressExample","ProgressExampleSource","ForcedErrorExample","ForcedErrorSource","FailButtonExample","FailButtonSource","ProgressFailureExample","ProgressFailureSource","ListenerExample","ListenerExampleSource","MultipleExample1","MultipleExample1Source","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport 'use-fetcher-react/dist/styles.css';\nimport '../src/index.css';\nimport Preview from '../src/Preview';\nimport BasicExample from '../src/components/BasicExample';\nimport BasicExampleSource from '!raw-loader!../src/components/BasicExample.tsx';\nimport HandleExample from '../src/components/HandleExample';\nimport HandleExampleSource from '!raw-loader!../src/components/HandleExample.tsx' \nimport LocationExample from '../src/components/LocationExample';\nimport LocationSource from '!raw-loader!../src/components/LocationExample.tsx' \nimport ForcedLoadingExample from '../src/components/ForcedLoadingExample';\nimport ForcedLoadingSource from '!raw-loader!../src/components/ForcedLoadingExample.tsx';\nimport CustomLoaderExample from '../src/components/CustomLoaderExample';\nimport CustomLoaderSource from '!raw-loader!../src/components/CustomLoaderExample.tsx';\nimport ProgressExample from '../src/components/ProgressExample';\nimport ProgressExampleSource from '!raw-loader!../src/components/ProgressExample.tsx';\nimport ForcedErrorExample from '../src/components/ForcedErrorExample';\nimport ForcedErrorSource from '!raw-loader!../src/components/ForcedErrorExample.tsx';\nimport FailButtonExample from '../src/components/FailButtonExample';\nimport FailButtonSource from '!raw-loader!../src/components/FailButtonExample.tsx';\nimport ProgressFailureExample from '../src/components/ProgressFailureExample';\nimport ProgressFailureSource from '!raw-loader!../src/components/ProgressFailureExample.tsx';\nimport ListenerExample from '../src/components/ListenerExample';\nimport ListenerExampleSource from '!raw-loader!../src/components/ListenerExample.tsx';\nimport MultipleExample1 from '../src/components/MultipleExample1';\nimport MultipleExample1Source from '!raw-loader!../src/components/MultipleExample1.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"why\"\n    }}>{`Why?`}</h1>\n    <p>{`This goal of this library is to take away the pain of manually handling fetching states (idle, loading, error)\nfor every one of your components. Just hand over an `}<inlineCode parentName=\"p\">{`AxiosResponse`}</inlineCode>{` object to Fetcher and let it handles the\nvisual feedbacks and the what-ifs.`}<br parentName=\"p\"></br>{`\n`}{`It reduces boilerplates but also give you a wide range of customization tools for general usage.`}</p>\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <h2 {...{\n      \"id\": \"using-yarn\"\n    }}>{`Using yarn`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add use-fetcher-react\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-npm\"\n    }}>{`Using npm`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install use-fetcher-react\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h1>\n    <p><inlineCode parentName=\"p\">{`use-fetcher-react`}</inlineCode>{` exposes a component `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` that you are supposed to wrap around your content.`}<br parentName=\"p\"></br>{`\n`}{`That components handle automatically fetching and feedbacks rendering.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport { Fetcher } from 'use-fetcher-react';\n\nconst MyComponent = () => {\n  return (\n    <div>\n      <Fetcher>\n        My content\n      </Fetcher>\n    </div>\n  );\n}\n`}</code></pre>\n    <p>{`But this won't do much on its own.`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`use-fetcher-react`}</inlineCode>{` also exposes `}<inlineCode parentName=\"p\">{`useFetcher`}</inlineCode>{` which returns a `}<inlineCode parentName=\"p\">{`FetcherAPI`}</inlineCode>{` object. You can interact with it\ninside your component and any visual feedback will be handled by `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{`, with the condition\nthat you pass the API as a prop.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React, { useEffect } from 'react';\nimport { useFetcher, Fetcher } from 'use-fetcher-react';\nimport axios from 'axios';\n\nconst MyComponent = () => {\n  const fetcher = useFetcher();\n  useEffect(() => {\n    let request = () => axios.get('...');\n    fetcher.fetch(request, data => {\n      // Do something with data\n    });\n  }, []);\n\n  return (\n    <div>\n      <Fetcher fetcher={fetcher}>\n        My content\n      </Fetcher>\n    </div>\n  );\n}\n`}</code></pre>\n    <p>{`There's no need for handling errors on this level. If any happens,\nthe callback just won't be called and the visual feedback will be handled automatically.`}</p>\n    <h2 {...{\n      \"id\": \"minimal-example\"\n    }}>{`Minimal Example`}</h2>\n    <p>{`Here's a minimal example of a component's fetching being handled by `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{`.`}<br parentName=\"p\"></br>{`\n`}{`The component `}<strong parentName=\"p\">{`doesn't`}</strong>{` have to react to the HTTP response nor does it have to show any loading feeback.`}<br parentName=\"p\"></br>{`\n`}{`All of that is handled by `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` automatically.  `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <BasicExample mdxType=\"BasicExample\" />\n  <editor>{BasicExampleSource}</editor>\n    </Preview>\n    <h2 {...{\n      \"id\": \"custom-promise\"\n    }}>{`Custom Promise`}</h2>\n    <p><inlineCode parentName=\"p\">{`FetcherAPI.fetch`}</inlineCode>{` expects an axios promise. You can however let Fetcher handle any type of promise with `}<inlineCode parentName=\"p\">{`FetcherAPI.handle`}</inlineCode>{`. `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <HandleExample mdxType=\"HandleExample\" />\n  <editor>{HandleExampleSource}</editor>\n    </Preview>\n    <h2 {...{\n      \"id\": \"feedback-location\"\n    }}>{`Feedback Location`}</h2>\n    <p>{`Depending on the location of the `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` component, you can position the visual feedback\narea however you want.`}<br parentName=\"p\"></br>{`\n`}{`Note that the component will set the parent's `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` style to `}<inlineCode parentName=\"p\">{`relative`}</inlineCode>{` and can also adjust its own border to\nmatch the one of the parent.`}</p>\n\n    <Preview mdxType=\"Preview\">\n  <LocationExample mdxType=\"LocationExample\" />\n  <editor>{LocationSource}</editor>\n    </Preview>\n    <h2 {...{\n      \"id\": \"fetching-states\"\n    }}>{`Fetching States`}</h2>\n    <h3 {...{\n      \"id\": \"loading\"\n    }}>{`Loading`}</h3>\n    <h4 {...{\n      \"id\": \"manual-set\"\n    }}>{`Manual Set`}</h4>\n    <p>{`When `}<inlineCode parentName=\"p\">{`fetcher.fetch`}</inlineCode>{` is called, the component automatically enters in the loading state.`}<br parentName=\"p\"></br>{`\n`}{`But you can manually set it:  `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <ForcedLoadingExample mdxType=\"ForcedLoadingExample\" />\n  <editor>{ForcedLoadingSource}</editor>\n    </Preview>\n    <h4 {...{\n      \"id\": \"custom-loader\"\n    }}>{`Custom Loader`}</h4>\n    <p>{`The library relies on `}<inlineCode parentName=\"p\">{`react-spinners`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.react-spinners.com/\"\n      }}>{`loader components`}</a>{` and use `}<inlineCode parentName=\"p\">{`ClipLoader`}</inlineCode>{` by default.\nYou can however specify a custom loader component.  `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <CustomLoaderExample mdxType=\"CustomLoaderExample\" />\n  <editor>{CustomLoaderSource}</editor>\n    </Preview>\n    <h4 {...{\n      \"id\": \"progress-bar\"\n    }}>{`Progress Bar`}</h4>\n    <p>{`UseFetcher comes with a progress bar too.  `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <ProgressExample mdxType=\"ProgressExample\" />\n  <editor>{ProgressExampleSource}</editor>\n    </Preview>\n    <h3 {...{\n      \"id\": \"error\"\n    }}>{`Error`}</h3>\n    <h4 {...{\n      \"id\": \"manual-set-1\"\n    }}>{`Manual Set`}</h4>\n    <p>{`Likewise, the error state can be enforced manually:  `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <ForcedErrorExample mdxType=\"ForcedErrorExample\" />\n  <editor>{ForcedErrorSource}</editor>\n    </Preview>  \nWhen an error is encountered while fetching resources, `Fetcher` displays an \nerror message as well as a button to retry the request. All of these can be customized as described bellow.  \n    <h4 {...{\n      \"id\": \"custom-retry-button\"\n    }}>{`Custom Retry button`}</h4>\n    <p>{`Here's an example with a custom retry button based on Bulma.  `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <FailButtonExample mdxType=\"FailButtonExample\" />\n  <editor>{FailButtonExample}</editor>\n    </Preview>  \n    <h4 {...{\n      \"id\": \"failure-with-a-progress-bar\"\n    }}>{`Failure With a Progress Bar`}</h4>\n    <p>{`The progress bar also handles failures.  `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <ProgressFailureExample mdxType=\"ProgressFailureExample\" />\n  <editor>{ProgressFailureSource}</editor>\n    </Preview>  \n    <h2 {...{\n      \"id\": \"listeners\"\n    }}>{`Listeners`}</h2>\n    <p>{`For more power, you can add custom listeners to the `}<inlineCode parentName=\"p\">{`FetcherAPI`}</inlineCode>{` object. Here's an example\nwith a component manually reacting to the fetching states.  `}</p>\n\n    <Preview mdxType=\"Preview\">\n  <ListenerExample mdxType=\"ListenerExample\" />\n  <editor>{ListenerExampleSource}</editor>\n    </Preview>  \n    <p>{`The possible listeners are:  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Listener`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fetch-start`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When `}<inlineCode parentName=\"td\">{`FetcherAPI.fetch`}</inlineCode>{` is called.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fetch-end`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Just before the callback from `}<inlineCode parentName=\"td\">{`FetcherAPI.fetch`}</inlineCode>{` is called.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`all-fetch-end`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When all tasks are completed.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loading-forced-start`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When `}<inlineCode parentName=\"td\">{`FetcherAPI.setLoading(true)`}</inlineCode>{` is called.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loading-forced-end`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When `}<inlineCode parentName=\"td\">{`FetcherAPI.setLoading(false)`}</inlineCode>{` is called.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`error`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When an error is caugh while fetching.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`error-forced`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When an error is manually set.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <p>{`When using `}<inlineCode parentName=\"p\">{`useFetch`}</inlineCode>{`, an options object can be passed as parameter.  `}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Option`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`errorMessage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The error message to display when an error is caught.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An error occured`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`minDelay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Minimal time to wait, in ms before collecting the request's response. useful to display proper loading feedback to the user.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`500`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loadingColor`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The color of the loading spinner.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`#36d7b7`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`buttonComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(props: { doRetry: () => void }) => JSX.Element`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A React component to render a custom button component.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loaderComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(props: { color: string}) => JSX.Element`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A React component to render a custom spinner.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`errorComponent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(props: { options: FetcherOptions}) => JSX.Element`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A React component to render a custom error visual feedback. Note that if this is used, `}<inlineCode parentName=\"td\">{`buttonComponent`}</inlineCode>{` will be ignored.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`null`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`wrapperClassCSS`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<inlineCode parentName=\"td\">{`className`}</inlineCode>{` value of the `}<inlineCode parentName=\"td\">{`Fetcher`}</inlineCode>{` container.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fetcher-wrapper`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loadingClassCSS`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<inlineCode parentName=\"td\">{`className`}</inlineCode>{` value of the element wrapping the loading spinner.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fetcher-loading`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`errorClassCSS`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<inlineCode parentName=\"td\">{`className`}</inlineCode>{` value of the element wrapping the error feedback.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fetching-error`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`wrapperStyles`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A style object to apply to the wrapper element.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`{}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loadingStyles`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A style object to apply to the loading element.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`{}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`errorStyles`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A style to apply to the error element.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`{}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`progress.show`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Display a progress bar while fetching? Default is `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`progress.color`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The color of the progress bar.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`#36d7b7`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`progress.errorColor`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The color of the progress bar when an error happens.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`#cd3f45`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`progress.tickDelay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`{ min: number, max: number}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`In the loading state, the progress bar increases at each tick. This parameter defines how`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`frequently ticks happen.  A random value is selected each time between `}<inlineCode parentName=\"td\">{`min`}</inlineCode>{` and `}<inlineCode parentName=\"td\">{`max`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`{ min: 500, max: 1000}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`progress.tickValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`{ min: number, max: number}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines how much the bar grows at each tick.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`{ min: 2, max: 3}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`progress.styles`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A style object to apply the progress bar element.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`{}`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"multiple-requests\"\n    }}>{`Multiple Requests`}</h3>\n    <p>{`Calling `}<inlineCode parentName=\"p\">{`FetcherAPI.fetch`}</inlineCode>{` returns the api object itself, thus allowing you to chain Multiple\nfetch calls.`}</p>\n\n    <Preview mdxType=\"Preview\">\n  <MultipleExample1 mdxType=\"MultipleExample1\" />\n  <editor>{MultipleExample1Source}</editor>\n    </Preview>  \n    <h3 {...{\n      \"id\": \"useeffect-cleanup\"\n    }}>{`UseEffect Cleanup`}</h3>\n    <p>{`To prevent memory leaks when working with `}<inlineCode parentName=\"p\">{`useEffect`}</inlineCode>{`, call `}<inlineCode parentName=\"p\">{`FetcherAPI.cancel`}</inlineCode>{`\ninside the cleanup function. This won't cancel pending promises, but this'll stop\ncallbacks passed to `}<inlineCode parentName=\"p\">{`fetch`}</inlineCode>{` from being called.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React, { useEffect } from 'react';\nimport { useFetcher, Fetcher } from 'use-fetcher-react';\nimport axios from 'axios';\n\nconst MyComponent = () => {\n  const fetcher = useFetcher();\n  useEffect(() => {\n    let request = () => axios.get('...');\n    fetcher.fetch(request, data => {\n      // Do something with data\n    });\n    return () => {\n      fetcher.cancel();\n    };\n  }, []);\n\n  return (\n    <div>\n      <Fetcher fetcher={fetcher}>\n        My content\n      </Fetcher>\n    </div>\n  );\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"global-options\"\n    }}>{`Global Options`}</h4>\n    <p>{`I recommend to define your Fetcher options as ES modules and export them throughout your\napplications instead of defined them for each of your component that need some customization.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { myFetcherOptions } from '@/utils/fetcherOptions';\n\n// In your components\nconst fetcher = useFetcher(myFetcherOptions);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"customizing-css\"\n    }}>{`Customizing CSS`}</h2>\n    <p>{`Modify the following CSS classes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`fetcher-wrapper  `}</li>\n      <li parentName=\"ul\">{`fetcher-error`}</li>\n      <li parentName=\"ul\">{`fetching-loading`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}