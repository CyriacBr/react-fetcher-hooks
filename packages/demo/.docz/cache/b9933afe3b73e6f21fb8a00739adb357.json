{"remainingRequest":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js??ref--6-1!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js??ref--6-2!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/states/loading.mdx","dependencies":[{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/states/loading.mdx","mtime":1573220330669},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1572980644110},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js","mtime":1572807047183},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js","mtime":1572980643543},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js","mtime":1572980619128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9tbnQvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LWZldGNoZXItaG9va3Mvbm9kZV9tb2R1bGVzL2RvY3otY29yZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi9pbXBvcnQnYnVsbWEvY3NzL2J1bG1hLmNzcyc7aW1wb3J0Jy4uLy4uL3NyYy9pbmRleC5jc3MnO2ltcG9ydCdyZWFjdC1mZXRjaGVyLWhvb2tzL2Rpc3Qvc3R5bGVzLmNzcyc7aW1wb3J0IExvYWRpbmdFeGFtcGxlIGZyb20nLi4vLi4vc3JjL2NvbXBvbmVudHMvTG9hZGluZ0V4YW1wbGUudHN4JztpbXBvcnQgQ3VzdG9tTG9hZGVyRXhhbXBsZSBmcm9tJy4uLy4uL3NyYy9jb21wb25lbnRzL0N1c3RvbUxvYWRlckV4YW1wbGUudHN4JztpbXBvcnQgUHJvZ3Jlc3NFeGFtcGxlIGZyb20nLi4vLi4vc3JjL2NvbXBvbmVudHMvUHJvZ3Jlc3NFeGFtcGxlLnRzeCc7aW1wb3J0IFBsYWNlaG9sZGVyRXhhbXBsZSBmcm9tJy4uLy4uL3NyYy9jb21wb25lbnRzL1BsYWNlaG9sZGVyRXhhbXBsZS50c3gnO3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJsb2FkaW5nIn0sIkxvYWRpbmciKSxtZHgoInAiLG51bGwsIldoZW4gYSByZWZlcmVuY2UgdGllZCB0byAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiRmV0Y2hlciIpLCIgcGVyZm9ybXMgYSByZXF1ZXN0LCBhIGJsb2NraW5nIG92ZXJsYXkgd2lsbCByZW5kZXIgYW5kIHNob3cgYVxuY3VzdG9taXphYmxlIGxvYWRlciBjb21wb25lbnQ6IiksbWR4KExvYWRpbmdFeGFtcGxlLHttZHhUeXBlOiJMb2FkaW5nRXhhbXBsZSJ9KSxtZHgoImgyIix7ImlkIjoiY3VzdG9tLWxvYWRlciJ9LCJDdXN0b20gTG9hZGVyIiksbWR4KCJwIixudWxsLCJVc2luZyBvcHRpb25zLCBpdCBpcyBwb3NzaWJsZSB0byBwYXNzIGEgY3VzdG9tIGxvYWRlciBjb21wb25lbnQ6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRzeCJ9KSwiaW1wb3J0IHsgQmVhdExvYWRlciB9IGZyb20gJ3JlYWN0LXNwaW5uZXJzJztcbmNvbnN0IG9wdGlvbnMgPSB7XG4gIGxvYWRlckNvbXBvbmVudDogKHsgY29sb3IgfSkgPT4gPEJlYXRMb2FkZXIgY29sb3I9e2NvbG9yfSAvPlxufTtcbiIpKSxtZHgoQ3VzdG9tTG9hZGVyRXhhbXBsZSx7bWR4VHlwZToiQ3VzdG9tTG9hZGVyRXhhbXBsZSJ9KSxtZHgoImgyIix7ImlkIjoicHJvZ3Jlc3MtYmFyIn0sIlByb2dyZXNzIEJhciIpLG1keCgicCIsbnVsbCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInJlYWN0LWZldGNoZXItaG9va3MiKSwiIGFsc28gY29udGFpbnMgYSBidWlsdC1pbiBwcm9ncmVzcyBiYXIuIFlvdSBjYW4gdG9nZ2xlIGl0IG9uIHVzaW5nICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJGZXRjaGVyIiksIiBvcHRpb25zLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10c3gifSksImNvbnN0IG9wdGlvbnMgPSB7XG4gIHByb2dyZXNzOiB7IHNob3c6IHRydWUgfVxufTtcbiIpKSxtZHgoUHJvZ3Jlc3NFeGFtcGxlLHttZHhUeXBlOiJQcm9ncmVzc0V4YW1wbGUifSksbWR4KCJoMiIseyJpZCI6InBsYWNlaG9sZGVyIn0sIlBsYWNlaG9sZGVyIiksbWR4KCJwIixudWxsLCJCeSBjdXN0b21pemluZyB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInBsYWNlaG9sZGVyIiksIiBvcHRpb24sIGl0IGlzIHBvc3NpYmxlIHRvIHNob3cgYSBwbGFjZWhvbGRlciBvdmVybGF5IHdoaWxlIGEgcmVxdWVzdCBpcyBwZW5kaW5nLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10c3gifSksImNvbnN0IG9wdGlvbnMgPSB7XG4gIHBsYWNlaG9sZGVyOiB7IHNob3c6IHRydWUgfVxufTtcbiIpKSxtZHgoUGxhY2Vob2xkZXJFeGFtcGxlLHttZHhUeXBlOiJQbGFjZWhvbGRlckV4YW1wbGUifSksbWR4KCJwIixudWxsLCJUaGVyZSBhcmUgbWFueSB3YXlzIHRvIGNvbWUgdXAgd2l0aCBhIHBsYWNlaG9sZGVyIGNvbXBvbmVudCwgYnV0ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJyZWFjdC1mZXRjaGVyLWhvb2tzIiksIiBoYXMgYSBidWlsdC1pblxuZnVuY3Rpb25uYWxpdHkgd2hpY2ggcmVuZGVyIHBsYWNlaG9sZGVyIGJsb2NrcyBvbiB0b3Agb2YgeW91ciBjb250ZW50IGJhc2VkIG9uIGEgc3BlY2lmaWMgQ1NTIGNsYXNzLlxuQnkgZGVmYXVsdCBpdCBpcyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiLS1wIiksIi4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdHN4In0pLCI8ZGl2IGNsYXNzTmFtZT0ndGVzdC1jb250YWluZXInPlxuICA8RmV0Y2hlciByZWZzPXtbcmVmXX0gb3B0aW9ucz17b3B0aW9uc30+XG4gICAgPHNwYW4gY2xhc3NOYW1lPSctLXAnPlBsYWNlaG9sZGVyIEV4YW1wbGU8L3NwYW4+XG4gICAgPGJyIC8+XG4gICAgPHNwYW4gY2xhc3NOYW1lPSctLXAnPlxuICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gTWFlY2VuYXMgZmVybWVudHVtIGFjY3Vtc2FuXG4gICAgICBsb3JlbSwgaWQgdHJpc3RpcXVlIGVyYXQuIFV0IGVsZW1lbnR1bSBkdWkgbG9ib3J0aXMgZXggZWxlaWZlbmQgZWxlaWZlbmQuIEN1cmFiaXR1clxuICAgICAgc2NlbGVyaXNxdWUgb2RpbyBhYyB0ZWxsdXMgdm9sdXRwYXQsIG5lYyB0ZW1wb3IganVzdG8gdHJpc3RpcXVlLiBWaXZhbXVzIHRpbmNpZHVudCBzZW0gbmVjXG4gICAgICBvcm5hcmUgdGVtcG9yLiBNYWVjZW5hcyBhdCB0ZWxsdXMgYWMgYXJjdSBjb252YWxsaXMgcHVsdmluYXIuIENyYXMgY3Vyc3VzLCBtYXNzYSB1dCB2YXJpdXNcbiAgICAgIGxhb3JlZXQsIHNlbSBkdWkgZmF1Y2lidXMgbnVsbGEsIGluIGltcGVyZGlldCBsYWN1cyBudWxsYSB2aXRhZSBhbnRlLlxuICAgIDwvc3Bhbj5cbiAgPC9GZXRjaGVyPlxuPC9kaXY+XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6ImRvY3Mvc3RhdGVzL2xvYWRpbmcubWR4In19KTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/states/loading.mdx"],"names":["React","mdx","LoadingExample","CustomLoaderExample","ProgressExample","PlaceholderExample","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gNACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,cACA,MAAO,qBAAP,CACA,MAAO,qBAAP,CACA,MAAO,qCAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,yCAA3B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,8CAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,0CAA5B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,6CAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,SADA,CAAR,WAFK,CAKL,yCAAgC,kBAAY,UAAU,CAAC,GAAvB,YAAhC,kGALK,CAQL,IAAC,cAAD,EAAgB,OAAO,CAAC,gBAAxB,EARK,CASL,SAAQ,CACN,KAAM,eADA,CAAR,iBATK,CAYL,gFAZK,CAaL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,0IAAL,CAbK,CAqBL,IAAC,mBAAD,EAAqB,OAAO,CAAC,qBAA7B,EArBK,CAsBL,SAAQ,CACN,KAAM,cADA,CAAR,gBAtBK,CAyBL,aAAG,kBAAY,UAAU,CAAC,GAAvB,wBAAH,uEAAyI,kBAAY,UAAU,CAAC,GAAvB,YAAzI,aAzBK,CA0BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,wDAAL,CA1BK,CAiCL,IAAC,eAAD,EAAiB,OAAO,CAAC,iBAAzB,EAjCK,CAkCL,SAAQ,CACN,KAAM,aADA,CAAR,eAlCK,CAqCL,mCAA0B,kBAAY,UAAU,CAAC,GAAvB,gBAA1B,qFArCK,CAsCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,2DAAL,CAtCK,CA6CL,IAAC,kBAAD,EAAoB,OAAO,CAAC,oBAA5B,EA7CK,CA8CL,iFAAwE,kBAAY,UAAU,CAAC,GAAvB,wBAAxE,4IAEe,kBAAY,UAAU,CAAC,GAAvB,QAFf,KA9CK,CAiDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,4pBAAL,CAjDK,CAAP,CAkED,C,mQAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport 'bulma/css/bulma.css';\nimport '../../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport LoadingExample from '../../src/components/LoadingExample.tsx';\nimport CustomLoaderExample from '../../src/components/CustomLoaderExample.tsx';\nimport ProgressExample from '../../src/components/ProgressExample.tsx';\nimport PlaceholderExample from '../../src/components/PlaceholderExample.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"loading\"\n    }}>{`Loading`}</h1>\n    <p>{`When a reference tied to `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` performs a request, a blocking overlay will render and show a\ncustomizable loader component:`}</p>\n\n    <LoadingExample mdxType=\"LoadingExample\" />\n    <h2 {...{\n      \"id\": \"custom-loader\"\n    }}>{`Custom Loader`}</h2>\n    <p>{`Using options, it is possible to pass a custom loader component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { BeatLoader } from 'react-spinners';\nconst options = {\n  loaderComponent: ({ color }) => <BeatLoader color={color} />\n};\n`}</code></pre>\n\n    <CustomLoaderExample mdxType=\"CustomLoaderExample\" />\n    <h2 {...{\n      \"id\": \"progress-bar\"\n    }}>{`Progress Bar`}</h2>\n    <p><inlineCode parentName=\"p\">{`react-fetcher-hooks`}</inlineCode>{` also contains a built-in progress bar. You can toggle it on using `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` options.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const options = {\n  progress: { show: true }\n};\n`}</code></pre>\n\n    <ProgressExample mdxType=\"ProgressExample\" />\n    <h2 {...{\n      \"id\": \"placeholder\"\n    }}>{`Placeholder`}</h2>\n    <p>{`By customizing the `}<inlineCode parentName=\"p\">{`placeholder`}</inlineCode>{` option, it is possible to show a placeholder overlay while a request is pending.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const options = {\n  placeholder: { show: true }\n};\n`}</code></pre>\n\n    <PlaceholderExample mdxType=\"PlaceholderExample\" />\n    <p>{`There are many ways to come up with a placeholder component, but `}<inlineCode parentName=\"p\">{`react-fetcher-hooks`}</inlineCode>{` has a built-in\nfunctionnality which render placeholder blocks on top of your content based on a specific CSS class.\nBy default it is `}<inlineCode parentName=\"p\">{`--p`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<div className='test-container'>\n  <Fetcher refs={[ref]} options={options}>\n    <span className='--p'>Placeholder Example</span>\n    <br />\n    <span className='--p'>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas fermentum accumsan\n      lorem, id tristique erat. Ut elementum dui lobortis ex eleifend eleifend. Curabitur\n      scelerisque odio ac tellus volutpat, nec tempor justo tristique. Vivamus tincidunt sem nec\n      ornare tempor. Maecenas at tellus ac arcu convallis pulvinar. Cras cursus, massa ut varius\n      laoreet, sem dui faucibus nulla, in imperdiet lacus nulla vitae ante.\n    </span>\n  </Fetcher>\n</div>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}