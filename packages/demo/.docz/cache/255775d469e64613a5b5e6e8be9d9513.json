{"remainingRequest":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js??ref--6-1!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js??ref--6-2!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/index.mdx","dependencies":[{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/index.mdx","mtime":1573220020692},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1572980644110},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js","mtime":1572807047183},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js","mtime":1572980643543},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js","mtime":1572980619128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9tbnQvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LWZldGNoZXItaG9va3Mvbm9kZV9tb2R1bGVzL2RvY3otY29yZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi9pbXBvcnQnYnVsbWEvY3NzL2J1bG1hLmNzcyc7aW1wb3J0Jy4uL3NyYy9pbmRleC5jc3MnO2ltcG9ydCdyZWFjdC1mZXRjaGVyLWhvb2tzL2Rpc3Qvc3R5bGVzLmNzcyc7aW1wb3J0IFByZXZpZXcgZnJvbScuLi9zcmMvUHJldmlldy50c3gnO2ltcG9ydCBMb2FkaW5nRXhhbXBsZSBmcm9tJy4uL3NyYy9jb21wb25lbnRzL0xvYWRpbmdFeGFtcGxlLnRzeCc7aW1wb3J0IFBsYWNlaG9sZGVyRXhhbXBsZSBmcm9tJy4uL3NyYy9jb21wb25lbnRzL1BsYWNlaG9sZGVyRXhhbXBsZS50c3gnO2ltcG9ydCBGYWlsRXhhbXBsZSBmcm9tJy4uL3NyYy9jb21wb25lbnRzL0ZhaWxFeGFtcGxlLnRzeCc7dmFyIG1ha2VTaG9ydGNvZGU9ZnVuY3Rpb24gbWFrZVNob3J0Y29kZShuYW1lKXtyZXR1cm4gZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307fTt2YXIgbGF5b3V0UHJvcHM9e307dmFyIE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKXt2YXIgY29tcG9uZW50cz1fcmVmLmNvbXBvbmVudHMscHJvcHM9X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LE9iamVjdC5hc3NpZ24oe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMSIseyJpZCI6IndoeSJ9LCJXaHk/IiksbWR4KCJwIixudWxsLCJUaGUgZ29hbCBvZiB0aGlzIGxpYnJhcnkgaXMgdG8gdGFrZSBhd2F5IHRoZSBwYWluIG9mIG1hbnVhbGx5IGhhbmRsaW5nIGZldGNoaW5nIHN0YXRlcyAoaWRsZSwgbG9hZGluZywgZXJyb3IpXG5hbmQgdGhlaXIgdmlzdWFsIGZlZWRiYWNrLiBKdXN0IGhhbmQgb3ZlciBhbiBIVFRQIHJlcXVlc3QgdG8gdGhlIHZhcmlvdXMgaG9va3MgdGhpcyBsaWJyYXJ5IG9mZmVycywgYW5kIGxldCBpdCBoYW5kbGUgdGhlXG52aXN1YWwgZmVlZGJhY2tzIGFuZCB0aGUgd2hhdC1pZnMuIixtZHgoImJyIix7cGFyZW50TmFtZToicCJ9KSwiXG4iLCJJdCByZWR1Y2VzIGJvaWxlcnBsYXRlIGJ1dCBhbHNvIGdpdmUgeW91IGEgd2lkZSByYW5nZSBvZiBjdXN0b21pemF0aW9uIHRvb2xzIGZvciBnZW5lcmFsIHVzYWdlLiIpLG1keCgiaDEiLHsiaWQiOiJhbi1leGFtcGxlLWlzLXdvcnRoLWEtdGhvdXNhbmQtd29yZHMifSwiQW4gZXhhbXBsZSBpcyB3b3J0aCBhIHRob3VzYW5kIHdvcmRzIiksbWR4KCJoMyIseyJpZCI6IjEtY3JlYXRlLWEtZmV0Y2hlci1yZWZlcmVuY2UtdXNpbmctb25lLW9mLXRoZS02LWhvb2tzLXRoZS1saWJyYXJ5LXByb3ZpZGVzIn0sIjEuIENyZWF0ZSBhIGZldGNoZXIgcmVmZXJlbmNlIHVzaW5nIG9uZSBvZiB0aGUgNiBob29rcyB0aGUgbGlicmFyeSBwcm92aWRlcyIpLG1keChQcmV2aWV3LHt0YWJOYW1lczpbJ0phdmFTY3JpcHQnLCdUeXBlU2NyaXB0J10sbWR4VHlwZToiUHJldmlldyJ9LG1keCgiZWRpdG9yIixudWxsLCJjb25zdCByZWYgPSB1c2VGZXRjaGVyKCk7XG4vLyBvclxuY29uc3QgW3JlZiwgZ2V0SXRlbSwgaXRlbV0gPSB1c2VSZXF1ZXN0KChpZCkgPT4gYXhpb3MuZ2V0KGBteWFwaS5jb20vaXRlbXMvJHtpZH1gKSk7XG4iKSxtZHgoImVkaXRvciIsbnVsbCwiY29uc3QgcmVmID0gdXNlRmV0Y2hlcigpO1xuLy8gb3JcbmNvbnN0IFtyZWYsIGdldEl0ZW0sIGl0ZW1dID0gdXNlUmVxdWVzdCgoaWQ6IG51bWJlcikgPT4gYXhpb3MuZ2V0PEl0ZW0+KGBteWFwaS5jb20vaXRlbXMvJHtpZH1gKSk7XG4iKSksbWR4KCJoNCIseyJpZCI6IjItd3JhcC15b3VyLWNvbnRlbnQtYXJvdW5kLXRoZS1mZXRjaGVyLWNvbXBvbmVudCJ9LCIyLiBXcmFwIHlvdXIgY29udGVudCBhcm91bmQgdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiaDQifSwiRmV0Y2hlciIpLCIgY29tcG9uZW50IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRzeCJ9KSwiPGRpdj5cbiAgPEZldGNoZXIgcmVmcz17cmVmfT5cbiAgICBNeSBjb250ZW50XG4gIDwvRmV0Y2hlcj5cbjwvZGl2PlxuIikpLG1keCgiaDQiLHsiaWQiOiIzLXVzZS10aGUtZmV0Y2hlci1yZWZlcmVuY2UtdG8tcGVyZm9ybS1odHRwLW9yLWN1c3RvbS1yZXF1ZXN0cyJ9LCIzLiBVc2UgdGhlIGZldGNoZXIgcmVmZXJlbmNlIHRvIHBlcmZvcm0gSFRUUCBvciBjdXN0b20gcmVxdWVzdHMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdHMifSksInJlZi5mZXRjaCguLi4pO1xuLy8gb3JcbmdldEl0ZW0oMSk7XG4iKSksbWR4KCJoNCIseyJpZCI6IjQtbGV0LWZldGNoZXItaGFuZGxlLXRoZS12aXN1YWwtZmVlZGJhY2sifSwiNC4gTGV0ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToiaDQifSwiRmV0Y2hlciIpLCIgaGFuZGxlIHRoZSB2aXN1YWwgZmVlZGJhY2s6IiksbWR4KCJoNSIseyJpZCI6ImxvYWRpbmcifSwiTG9hZGluZyIpLG1keChMb2FkaW5nRXhhbXBsZSx7bWR4VHlwZToiTG9hZGluZ0V4YW1wbGUifSksbWR4KCJoNSIseyJpZCI6IndpdGgtYXV0by1wbGFjZWhvbGRlciJ9LCJXaXRoIEF1dG8gUGxhY2Vob2xkZXIiKSxtZHgoUGxhY2Vob2xkZXJFeGFtcGxlLHttZHhUeXBlOiJQbGFjZWhvbGRlckV4YW1wbGUifSksbWR4KCJoNSIseyJpZCI6ImVycm9yLXdpdGgtcmV0cnkifSwiRXJyb3Igd2l0aCByZXRyeSIpLG1keChGYWlsRXhhbXBsZSx7bWR4VHlwZToiRmFpbEV4YW1wbGUifSksbWR4KCJoMSIseyJpZCI6Imluc3RhbGxhdGlvbiJ9LCJJbnN0YWxsYXRpb24iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtYmFzaCJ9KSwieWFybiBhZGQgcmVhY3QtZmV0Y2hlci1ob29rc1xubnBtIGluc3RhbGwgcmVhY3QtZmV0Y2hlci1ob29rc1xuIikpLG1keCgicCIsbnVsbCwiTWFrZSBzdXJlIHRvIGFkZCB0aGUgbGlicmFyeSBDU1MgZmlsZSB0byB5b3VyIGJ1aWxkOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS10cyJ9KSwiaW1wb3J0ICdyZWFjdC1mZXRjaGVyLWhvb2tzL2Rpc3Qvc3R5bGVzLmNzcyc7XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6ImRvY3MvaW5kZXgubWR4In19KTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/index.mdx"],"names":["React","mdx","Preview","LoadingExample","PlaceholderExample","FailExample","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gNACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,cACA,MAAO,qBAAP,CACA,MAAO,kBAAP,CACA,MAAO,qCAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,0CAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,KADA,CAAR,QAFK,CAKL,4RAEgC,UAAI,UAAU,CAAC,GAAf,EAFhC,wGALK,CASL,SAAQ,CACN,KAAM,sCADA,CAAR,wCATK,CAYL,SAAQ,CACN,KAAM,4EADA,CAAR,+EAZK,CAeL,IAAC,OAAD,EAAS,QAAQ,CAAE,CAAC,YAAD,CAAe,YAAf,CAAnB,CAAiD,OAAO,CAAC,SAAzD,EACF,6IADE,CAOF,2JAPE,CAfK,CA6BL,SAAQ,CACN,KAAM,kDADA,CAAR,oCAEuC,kBAAY,UAAU,CAAC,IAAvB,YAFvC,cA7BK,CAgCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,0EAAL,CAhCK,CAwCL,SAAQ,CACN,KAAM,gEADA,CAAR,mEAxCK,CA2CL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,0CAAL,CA3CK,CAiDL,SAAQ,CACN,KAAM,0CADA,CAAR,WAEc,kBAAY,UAAU,CAAC,IAAvB,YAFd,gCAjDK,CAoDL,SAAQ,CACN,KAAM,SADA,CAAR,WApDK,CAwDL,IAAC,cAAD,EAAgB,OAAO,CAAC,gBAAxB,EAxDK,CAyDL,SAAQ,CACN,KAAM,uBADA,CAAR,yBAzDK,CA6DL,IAAC,kBAAD,EAAoB,OAAO,CAAC,oBAA5B,EA7DK,CA8DL,SAAQ,CACN,KAAM,kBADA,CAAR,oBA9DK,CAkEL,IAAC,WAAD,EAAa,OAAO,CAAC,aAArB,EAlEK,CAmEL,SAAQ,CACN,KAAM,cADA,CAAR,gBAnEK,CAsEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,oEAAL,CAtEK,CA2EL,oEA3EK,CA4EL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,oDAAL,CA5EK,CAAP,CAiFD,C,0PAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport 'bulma/css/bulma.css';\nimport '../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport Preview from '../src/Preview.tsx';\nimport LoadingExample from '../src/components/LoadingExample.tsx';\nimport PlaceholderExample from '../src/components/PlaceholderExample.tsx';\nimport FailExample from '../src/components/FailExample.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"why\"\n    }}>{`Why?`}</h1>\n    <p>{`The goal of this library is to take away the pain of manually handling fetching states (idle, loading, error)\nand their visual feedback. Just hand over an HTTP request to the various hooks this library offers, and let it handle the\nvisual feedbacks and the what-ifs.`}<br parentName=\"p\"></br>{`\n`}{`It reduces boilerplate but also give you a wide range of customization tools for general usage.`}</p>\n    <h1 {...{\n      \"id\": \"an-example-is-worth-a-thousand-words\"\n    }}>{`An example is worth a thousand words`}</h1>\n    <h3 {...{\n      \"id\": \"1-create-a-fetcher-reference-using-one-of-the-6-hooks-the-library-provides\"\n    }}>{`1. Create a fetcher reference using one of the 6 hooks the library provides`}</h3>\n    <Preview tabNames={['JavaScript', 'TypeScript']} mdxType=\"Preview\">\n  <editor>\n        {`const ref = useFetcher();\n// or\nconst [ref, getItem, item] = useRequest((id) => axios.get(\\`myapi.com/items/\\${id}\\`));\n`}\n  </editor>\n  <editor>\n        {`const ref = useFetcher();\n// or\nconst [ref, getItem, item] = useRequest((id: number) => axios.get<Item>(\\`myapi.com/items/\\${id}\\`));\n`}\n  </editor>\n    </Preview>\n    <h4 {...{\n      \"id\": \"2-wrap-your-content-around-the-fetcher-component\"\n    }}>{`2. Wrap your content around the `}<inlineCode parentName=\"h4\">{`Fetcher`}</inlineCode>{` component`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<div>\n  <Fetcher refs={ref}>\n    My content\n  </Fetcher>\n</div>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"3-use-the-fetcher-reference-to-perform-http-or-custom-requests\"\n    }}>{`3. Use the fetcher reference to perform HTTP or custom requests`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`ref.fetch(...);\n// or\ngetItem(1);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"4-let-fetcher-handle-the-visual-feedback\"\n    }}>{`4. Let `}<inlineCode parentName=\"h4\">{`Fetcher`}</inlineCode>{` handle the visual feedback:`}</h4>\n    <h5 {...{\n      \"id\": \"loading\"\n    }}>{`Loading`}</h5>\n\n    <LoadingExample mdxType=\"LoadingExample\" />\n    <h5 {...{\n      \"id\": \"with-auto-placeholder\"\n    }}>{`With Auto Placeholder`}</h5>\n\n    <PlaceholderExample mdxType=\"PlaceholderExample\" />\n    <h5 {...{\n      \"id\": \"error-with-retry\"\n    }}>{`Error with retry`}</h5>\n\n    <FailExample mdxType=\"FailExample\" />\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add react-fetcher-hooks\nnpm install react-fetcher-hooks\n`}</code></pre>\n    <p>{`Make sure to add the library CSS file to your build:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import 'react-fetcher-hooks/dist/styles.css';\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}