{"remainingRequest":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/babel-loader/lib/index.js??ref--6-1!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/@mdx-js/loader/index.js??ref--6-2!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/source-map-loader/index.js!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/packages/demo/docs/usage/index.mdx","dependencies":[{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/packages/demo/docs/usage/index.mdx","mtime":1570391998953},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1562869367178},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/babel-loader/lib/index.js","mtime":1562869367050},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/@mdx-js/loader/index.js","mtime":1570381059231},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/source-map-loader/index.js","mtime":1562869367869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/packages/demo/docs/usage/index.mdx"],"names":["React","mdx","LoadingExample","PlaceholderExample","FailExample","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport 'bulma/css/bulma.css';\nimport '../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport LoadingExample from '../src/components/LoadingExample.tsx';\nimport PlaceholderExample from '../src/components/PlaceholderExample.tsx';\nimport FailExample from '../src/components/FailExample.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"why\"\n    }}>{`Why?`}</h1>\n    <p>{`The goal of this library is to take away the pain of manually handling fetching states (idle, loading, error)\nand their visual feedback. Just hand over an HTTP request to the various hooks this library offers, and let it handle the\nvisual feedbacks and the what-ifs.`}<br parentName=\"p\"></br>{`\n`}{`It reduces boilerplate but also give you a wide range of customization tools for general usage.`}</p>\n    <h1 {...{\n      \"id\": \"an-example-is-worth-a-thousand-words\"\n    }}>{`An example is worth a thousand words`}</h1>\n    <h3 {...{\n      \"id\": \"1-create-a-fetcher-reference-using-one-of-the-6-hooks-the-library-provides\"\n    }}>{`1. Create a fetcher reference using one of the 6 hooks the library provides`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const ref = useFetcher();\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"2-wrap-your-content-around-the-fetcher-component\"\n    }}>{`2. Wrap your content around the `}<inlineCode parentName=\"h4\">{`Fetcher`}</inlineCode>{` component`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<div>\n  <Fetcher refs={ref}>\n    My content\n  </Fetcher>\n</div>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"3-use-the-fetcher-reference-to-perform-http-or-custom-requests\"\n    }}>{`3. Use the fetcher reference to perform HTTP or custom requests`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`ref.fetch(...);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"4-let-fetcher-handle-the-visual-feedback\"\n    }}>{`4. Let `}<inlineCode parentName=\"h4\">{`Fetcher`}</inlineCode>{` handle the visual feedback:`}</h4>\n    <h5 {...{\n      \"id\": \"loading\"\n    }}>{`Loading`}</h5>\n\n    <LoadingExample mdxType=\"LoadingExample\" />\n    <h5 {...{\n      \"id\": \"with-auto-placeholder\"\n    }}>{`With Auto Placeholder`}</h5>\n\n    <PlaceholderExample mdxType=\"PlaceholderExample\" />\n    <h5 {...{\n      \"id\": \"error-with-retry\"\n    }}>{`Error with retry`}</h5>\n\n    <FailExample mdxType=\"FailExample\" />\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add react-fetcher-hooks\nnpm install react-fetcher-hooks\n`}</code></pre>\n    <p>{`Make sure to add the library CSS file to your build:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import 'react-fetcher-hooks/dist/styles.css';\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}