{"remainingRequest":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js??ref--6-1!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js??ref--6-2!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/usage/fetcher-reference.mdx","dependencies":[{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/usage/fetcher-reference.mdx","mtime":1573220333037},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1572980644110},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js","mtime":1572807047183},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js","mtime":1572980643543},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js","mtime":1572980619128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9tbnQvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LWZldGNoZXItaG9va3Mvbm9kZV9tb2R1bGVzL2RvY3otY29yZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi9pbXBvcnQnYnVsbWEvY3NzL2J1bG1hLmNzcyc7aW1wb3J0Jy4uLy4uL3NyYy9pbmRleC5jc3MnO2ltcG9ydCdyZWFjdC1mZXRjaGVyLWhvb2tzL2Rpc3Qvc3R5bGVzLmNzcyc7aW1wb3J0IFByZXZpZXcgZnJvbScuLi8uLi9zcmMvUHJldmlldy50c3gnO3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJmZXRjaGVyLXJlZmVyZW5jZSJ9LCJGZXRjaGVyIFJlZmVyZW5jZSIpLG1keCgicCIsbnVsbCwiVGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJGZXRjaGVyIiksIiBjb21wb25lbnQgcmVhY3RzIHRvIHRoZSBiZWhhdmlvciBvZiB0aGUgcmVmZXJlbmNlcyBpdCBpcyB0aWVkIHRvLlxuQSByZWZlcmVuY2UgaXMgYmFzaWNhbGx5IGFuIEFQSSB0aGF0IGxldCB5b3Ugc2VuZCBIVFRQIChidXQgbm90IG9ubHkpIHJlcXVlc3RzIHdpdGggYSBzaW1wbGlmaWVkIHN5bnRheC5cbllvdSBjYW4gY3JlYXRlIGEgcmVmZXJlbmNlIHVzaW5nIG9uZSBvZiB0aGUgaG9va3MgdGhlIGxpYnJhcnkgcHJvdmlkZXMuXG5Ob3RlIHRoYXQgd2l0aCB0aGUgYnVpbHQtaW4gaG9va3MsIG9uZ29pbmcgcmVxdWVzdHMgYXJlIGNhbmNlbGxlZCB3aGVuIHlvdXIgY29tcG9uZW50IHVubW91dHMsIHNvIHlvdVxuZG8gbm90IG5lZWQgdG8gc2V0IHVwIG1hbnVhbGx5IGEgY2xlYW51cCBmdW5jdGlvbi4iKSxtZHgoImgyIix7ImlkIjoiZXhhbXBsZSJ9LCJFeGFtcGxlIiksbWR4KCJwIixudWxsLCJIZXJlJ3MgYW4gZXhhbXBsZSBvbiBob3cgdG8gZmV0Y2ggZnJvbSBhIFJFU1QgR0VUIGVuZHBvaW50IHdpdGggIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInVzZVJlcXVlc3QiKSwiLCB3aGljaCBsZXQgeW91IHVzZSB5b3VyIG93biBheGlvcyBpbnN0YW5jZToiKSxtZHgoUHJldmlldyx7dGFiTmFtZXM6WydKYXZhU2NyaXB0JywnVHlwZVNjcmlwdCddLG1keFR5cGU6IlByZXZpZXcifSxtZHgoImVkaXRvciIsbnVsbCwiY29uc3QgW3JlZiwgZ2V0LCBpdGVtc10gPSB1c2VSZXF1ZXN0KCgpID0+IGF4aW9zLmdldCgnaHR0cDovL215YXBpLmNvbScpLCB0cnVlKTtcbi8vLS0gJ2l0ZW1zJyBpcyB0aGUgcmVzdWx0IG9mIHRoZSBheGlvcyByZXF1ZXN0XG4vLy0tICdnZXQnIGNhbiBiZSBjYWxsZWQgYXQgbGF0ZXIgZGF0ZSB0byByZS1mZXRjaFxuLy8uLi5cbjxGZXRjaGVyIHJlZnM9e3JlZn0+XG4gIE15IENvbnRlbnRcbjwvRmV0Y2hlcj5cbiIpLG1keCgiZWRpdG9yIixudWxsLCJjb25zdCBbcmVmLCBnZXQsIGl0ZW1zXSA9IHVzZVJlcXVlc3QoKCkgPT4gYXhpb3MuZ2V0PEl0ZW1bXT4oJ2h0dHA6Ly9teWFwaS5jb20nKSwgdHJ1ZSk7XG4vLy0tICdpdGVtcycgaXMgdGhlIHJlc3VsdCBvZiB0aGUgYXhpb3MgcmVxdWVzdFxuLy8tLSAnZ2V0JyBjYW4gYmUgY2FsbGVkIGF0IGxhdGVyIGRhdGUgdG8gcmUtZmV0Y2hcbi8vLi4uXG48RmV0Y2hlciByZWZzPXtyZWZ9PlxuICBNeSBDb250ZW50XG48L0ZldGNoZXI+XG4iKSksIkhvd2V2ZXIsIHlvdSBhcmUgZnJlZSB0byB1c2UgdGhlIGhvb2tzIHdpdGhvdXQgYEZldGNoZXJgLiBIZXJlJ3MgYW5vdGhlciBleGFtcGxlIGZvciBhIENSVUQgY2xpZW50IGltcGxlbWVudGF0aW9uLiIsbWR4KFByZXZpZXcse3RhYk5hbWVzOlsnSmF2YVNjcmlwdCcsJ1R5cGVTY3JpcHQnXSxtZHhUeXBlOiJQcmV2aWV3In0sbWR4KCJlZGl0b3IiLG51bGwsImNvbnN0IFtnZXRSZWYsIGdldEl0ZW1zLCBpdGVtc10gPSB1c2VSZXF1ZXN0KCgpID0+IGF4aW9zLmdldCgnaHR0cDovL215YXBpLmNvbScpLCB0cnVlKTtcbmNvbnN0IFtwb3N0UmVmLCBwb3N0SXRlbV0gPSB1c2VSZXF1ZXN0KChkYXRhKSA9PiBheGlvcy5wb3N0KCdodHRwOi8vbXlhcGkuY29tLycsIGRhdGEpKTtcbmNvbnN0IFtkZWxldGVSZWYsIGRlbGV0ZUl0ZW1dID0gdXNlUmVxdWVzdCgoaWQpID0+IGF4aW9zLmRlbGV0ZSgnaHR0cDovL215YXBpLmNvbS8nICsgaWQpKTtcbmNvbnN0IFt1cGRhdGVSZWYsIHVwZGF0ZUl0ZW1dID0gdXNlUmVxdWVzdCgoW2lkLCBkYXRhXSkgPT4gYXhpb3MucGF0Y2goJ2h0dHA6Ly9teWFwaS5jb20vJyArIGlkLCBkYXRhKSk7XG4pO1xuXG4vLy0tIFVzYWdlXG5nZXRJdGVtcygpO1xucG9zdEl0ZW0oZGF0YSk7XG5kZWxldGVJdGVtKDEpOyBcbnVwZGF0ZUl0ZW0oXG4vLy4uLlxuPEZldGNoZXIgcmVmcz17W2dldFJlZiwgcG9zdFJlZiwgdXBkYXRlUmVmLCBkZWxldGVSZWZdfT5cbiAgTXkgQ29udGVudFxuPC9GZXRjaGVyPlxuIiksbWR4KCJlZGl0b3IiLG51bGwsImNvbnN0IFtnZXRSZWYsIGdldEl0ZW1zLCBpdGVtc10gPSB1c2VSZXF1ZXN0KCgpID0+IGF4aW9zLmdldDxJdGVtW10+KCdodHRwOi8vbXlhcGkuY29tJyksIHRydWUpO1xuY29uc3QgW3Bvc3RSZWYsIHBvc3RJdGVtXSA9IHVzZVJlcXVlc3QoKGRhdGE6IEl0ZW0pID0+IGF4aW9zLnBvc3Q8SXRlbT4oJ2h0dHA6Ly9teWFwaS5jb20vJywgZGF0YSkpO1xuY29uc3QgW2RlbGV0ZVJlZiwgZGVsZXRlSXRlbV0gPSB1c2VSZXF1ZXN0KChpZDogbnVtYmVyKSA9PiBheGlvcy5kZWxldGUoJ2h0dHA6Ly9teWFwaS5jb20vJyArIGlkKSk7XG5jb25zdCBbdXBkYXRlUmVmLCB1cGRhdGVJdGVtXSA9IHVzZVJlcXVlc3QoKFtpZCwgZGF0YV06IFtudW1iZXIsIEl0ZW1dKSA9PiBheGlvcy5wYXRjaDxJdGVtPignaHR0cDovL215YXBpLmNvbS8nICsgaWQsIGRhdGEpKTtcbik7XG5cbi8vLS0gVXNhZ2VcbmdldEl0ZW1zKCk7XG5wb3N0SXRlbShkYXRhKTtcbmRlbGV0ZUl0ZW0oMSk7IFxudXBkYXRlSXRlbShcbi8vLi4uXG48RmV0Y2hlciByZWZzPXtbZ2V0UmVmLCBwb3N0UmVmLCB1cGRhdGVSZWYsIGRlbGV0ZVJlZl19PlxuICBNeSBDb250ZW50XG48L0ZldGNoZXI+XG4iKSksbWR4KCJoMiIseyJpZCI6ImNvbXBvc2FiaWxpdHkifSwiQ29tcG9zYWJpbGl0eSIpLG1keCgicCIsbnVsbCwiQmVjYXVzZSBmZXRjaGluZyBpcyBiYXNlZCBvbiBob29rcywgeW91IGNhbiBjb21iaW5lLCByZXVzZSB0aGVtIGFuZCBjcmVhdGUgeW91ciBvd24gY3VzdG9tIGhvb2tzXG50byBnYWluIGluIHJlYWRhYmlsaXR5IGFuZCBzaW1wbGljaXR5LiBUaGUgbGlicmFyeSBjb250YWlucyBhIGJ1aWx0LWluIGhvb2sgd2hpY2ggcmVmbGVjdHMganVzdCB0aGF0LiIpLG1keChQcmV2aWV3LHt0YWJOYW1lczpbJ0phdmFTY3JpcHQnLCdUeXBlU2NyaXB0J10sbWR4VHlwZToiUHJldmlldyJ9LG1keCgiZWRpdG9yIixudWxsLCJjb25zdCB1c2VycyA9IHVzZUNSVURSZXF1ZXN0KCdodHRwOi8vbXlhcGkuY29tL3VzZXJzJyk7XG4pO1xuXG4vLy0tIFVzYWdlXG51c2Vycy5nZXQoKTtcbnVzZXJzLml0ZW1zOyAvLy0tIEdFVCByZXN1bHRzXG51c2Vycy5wb3N0KGRhdGEpO1xudXNlcnMuZGVsZXRlKDEpO1xudXNlcnMudXBkYXRlKFxuLy8uLi5cbjxGZXRjaGVyIHJlZnM9e3VzZXJzLnJlZnN9PlxuICBNeSBDb250ZW50XG48L0ZldGNoZXI+XG4iKSxtZHgoImVkaXRvciIsbnVsbCwiY29uc3QgdXNlcnMgPSB1c2VDUlVEUmVxdWVzdDxJdGVtPignaHR0cDovL215YXBpLmNvbS91c2VycycpO1xuKTtcblxuLy8tLSBVc2FnZVxudXNlcnMuZ2V0KCk7XG51c2Vycy5pdGVtczsgLy8tLSBHRVQgcmVzdWx0c1xudXNlcnMucG9zdChkYXRhKTtcbnVzZXJzLmRlbGV0ZSgxKTtcbnVzZXJzLnVwZGF0ZShcbi8vLi4uXG48RmV0Y2hlciByZWZzPXt1c2Vycy5yZWZzfT5cbiAgTXkgQ29udGVudFxuPC9GZXRjaGVyPlxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJkb2NzL3VzYWdlL2ZldGNoZXItcmVmZXJlbmNlLm1keCJ9fSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/usage/fetcher-reference.mdx"],"names":["React","mdx","Preview","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gNACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,cACA,MAAO,qBAAP,CACA,MAAO,qBAAP,CACA,MAAO,qCAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,mBADA,CAAR,qBAFK,CAKL,oBAAW,kBAAY,UAAU,CAAC,GAAvB,YAAX,oZALK,CAUL,SAAQ,CACN,KAAM,SADA,CAAR,WAVK,CAaL,gFAAuE,kBAAY,UAAU,CAAC,GAAvB,eAAvE,gDAbK,CAcL,IAAC,OAAD,EAAS,QAAQ,CAAE,CAAC,YAAD,CAAe,YAAf,CAAnB,CAAiD,OAAO,CAAC,SAAzD,EACF,mQADE,CAWF,2QAXE,CAdK,sHAsCL,IAAC,OAAD,EAAS,QAAQ,CAAE,CAAC,YAAD,CAAe,YAAf,CAAnB,CAAiD,OAAO,CAAC,SAAzD,EACF,yjBADE,CAmBF,2mBAnBE,CAtCK,CA4EL,SAAQ,CACN,KAAM,eADA,CAAR,iBA5EK,CA+EL,uNA/EK,CAiFL,IAAC,OAAD,EAAS,QAAQ,CAAE,CAAC,YAAD,CAAe,YAAf,CAAnB,CAAiD,OAAO,CAAC,SAAzD,EACF,+PADE,CAiBF,qQAjBE,CAjFK,CAAP,CAoHD,C,4QAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport 'bulma/css/bulma.css';\nimport '../../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport Preview from '../../src/Preview.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"fetcher-reference\"\n    }}>{`Fetcher Reference`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` component reacts to the behavior of the references it is tied to.\nA reference is basically an API that let you send HTTP (but not only) requests with a simplified syntax.\nYou can create a reference using one of the hooks the library provides.\nNote that with the built-in hooks, ongoing requests are cancelled when your component unmouts, so you\ndo not need to set up manually a cleanup function.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Here's an example on how to fetch from a REST GET endpoint with `}<inlineCode parentName=\"p\">{`useRequest`}</inlineCode>{`, which let you use your own axios instance:`}</p>\n    <Preview tabNames={['JavaScript', 'TypeScript']} mdxType=\"Preview\">\n  <editor>\n        {`const [ref, get, items] = useRequest(() => axios.get('http://myapi.com'), true);\n//-- 'items' is the result of the axios request\n//-- 'get' can be called at later date to re-fetch\n//...\n<Fetcher refs={ref}>\n  My Content\n</Fetcher>\n`}\n  </editor>\n  <editor>\n        {`const [ref, get, items] = useRequest(() => axios.get<Item[]>('http://myapi.com'), true);\n//-- 'items' is the result of the axios request\n//-- 'get' can be called at later date to re-fetch\n//...\n<Fetcher refs={ref}>\n  My Content\n</Fetcher>\n`}\n  </editor>\n    </Preview>\nHowever, you are free to use the hooks without `Fetcher`.\nHere's another example for a CRUD client implementation.\n    <Preview tabNames={['JavaScript', 'TypeScript']} mdxType=\"Preview\">\n  <editor>\n        {`const [getRef, getItems, items] = useRequest(() => axios.get('http://myapi.com'), true);\nconst [postRef, postItem] = useRequest((data) => axios.post('http://myapi.com/', data));\nconst [deleteRef, deleteItem] = useRequest((id) => axios.delete('http://myapi.com/' + id));\nconst [updateRef, updateItem] = useRequest(([id, data]) => axios.patch('http://myapi.com/' + id, data));\n);\n\n//-- Usage\ngetItems();\npostItem(data);\ndeleteItem(1); \nupdateItem(\n//...\n<Fetcher refs={[getRef, postRef, updateRef, deleteRef]}>\n  My Content\n</Fetcher>\n`}\n  </editor>\n  <editor>\n        {`const [getRef, getItems, items] = useRequest(() => axios.get<Item[]>('http://myapi.com'), true);\nconst [postRef, postItem] = useRequest((data: Item) => axios.post<Item>('http://myapi.com/', data));\nconst [deleteRef, deleteItem] = useRequest((id: number) => axios.delete('http://myapi.com/' + id));\nconst [updateRef, updateItem] = useRequest(([id, data]: [number, Item]) => axios.patch<Item>('http://myapi.com/' + id, data));\n);\n\n//-- Usage\ngetItems();\npostItem(data);\ndeleteItem(1); \nupdateItem(\n//...\n<Fetcher refs={[getRef, postRef, updateRef, deleteRef]}>\n  My Content\n</Fetcher>\n`}\n  </editor>\n    </Preview>\n    <h2 {...{\n      \"id\": \"composability\"\n    }}>{`Composability`}</h2>\n    <p>{`Because fetching is based on hooks, you can combine, reuse them and create your own custom hooks\nto gain in readability and simplicity. The library contains a built-in hook which reflects just that.`}</p>\n    <Preview tabNames={['JavaScript', 'TypeScript']} mdxType=\"Preview\">\n  <editor>\n        {`const users = useCRUDRequest('http://myapi.com/users');\n);\n\n//-- Usage\nusers.get();\nusers.items; //-- GET results\nusers.post(data);\nusers.delete(1);\nusers.update(\n//...\n<Fetcher refs={users.refs}>\n  My Content\n</Fetcher>\n`}\n  </editor>\n  <editor>\n        {`const users = useCRUDRequest<Item>('http://myapi.com/users');\n);\n\n//-- Usage\nusers.get();\nusers.items; //-- GET results\nusers.post(data);\nusers.delete(1);\nusers.update(\n//...\n<Fetcher refs={users.refs}>\n  My Content\n</Fetcher>\n`}\n  </editor>\n    </Preview>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}