{"remainingRequest":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js??ref--6-1!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js??ref--6-2!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js!/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/hooks/use-request.mdx","dependencies":[{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/hooks/use-request.mdx","mtime":1573919616309},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1572980644110},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/babel-loader/lib/index.js","mtime":1572807047183},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/@mdx-js/loader/index.js","mtime":1572980643543},{"path":"/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/source-map-loader/index.js","mtime":1572980619128}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9tbnQvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LWZldGNoZXItaG9va3Mvbm9kZV9tb2R1bGVzL2RvY3otY29yZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi9pbXBvcnQnYnVsbWEvY3NzL2J1bG1hLmNzcyc7aW1wb3J0Jy4uLy4uL3NyYy9pbmRleC5jc3MnO2ltcG9ydCdyZWFjdC1mZXRjaGVyLWhvb2tzL2Rpc3Qvc3R5bGVzLmNzcyc7aW1wb3J0IFByZXZpZXcgZnJvbScuLi8uLi9zcmMvUHJldmlldy50c3gnO2ltcG9ydCBVc2VSZXF1ZXN0RXhhbXBsZSBmcm9tJy4uLy4uL3NyYy9jb21wb25lbnRzL1VzZVJlcXVlc3RFeGFtcGxlJztpbXBvcnQgVXNlUmVxdWVzdEV4YW1wbGVTb3VyY2UgZnJvbSchcmF3LWxvYWRlciEuLi8uLi9zcmMvY29tcG9uZW50cy9Vc2VSZXF1ZXN0RXhhbXBsZS50c3gnO3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJ1c2VyZXF1ZXN0In0sIlVzZVJlcXVlc3QiKSxtZHgoInAiLG51bGwsIlRoaXMgaXMgYSBzaW1wbGVyIHZlcnNpb24gb2YgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInVzZUZldGNoZXIiKSwiIHRvIGF2b2lkIHZlcmJvc2l0eS4iKSxtZHgoImgyIix7ImlkIjoidXNhZ2UifSwiVXNhZ2UiKSxtZHgoInAiLG51bGwsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ1c2VSZXF1ZXN0KHJlcXVlc3Q6ICguLi5hcmdzOiBhbnlbXSkgPT4gQXhpb3NQcm9taXNlLCBhdXRvRmV0Y2g/OiBib29sZWFuKSIpLG1keCgiYnIiLHtwYXJlbnROYW1lOiJwIn0pLCJcbiIsIlRoaXMgaG9vayByZXR1cm5zIGEgcmVmZXJlbmNlLCBhIGZ1bmN0aW9uIHRvIHRyaWdnZXIgdGhlIHJlcXVlc3QsIGFzIHdlbGwgYXMgYSBnZXR0ZXIgYW5kIHNldHRlciBmcm9tICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ1c2VTdGF0ZSIpLCIuXG5Zb3UgY2FuIHVzZSB5b3VyIG93biBheGlvcyBpbnN0YW5jZSAod2l0aCBjb25maWd1cmVkIGJhc2UgcGF0aCwgZm9yIGV4YW1wbGUpIHdpdGggIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInVzZVJlcXVlc3QiKSwiLiAgIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRzIn0pLCJjb25zdCBbcmVmLCBnZXQsIGl0ZW1zLCBzZXRJdGVtc10gPSB1c2VSZXF1ZXN0KCgpID0+IGF4aW9zLmdldCgndXNlcnMnKSlcbiIpKSxtZHgoInAiLG51bGwsIldoZW4gcGFzc2luZyB0cnVlIHRvIHRoZSBzZWNvbmQgYXJndW1lbnQsIGZldGNoaW5nIHdpbGwgaGFwcGVuIGFzIHNvb24gYXMgdGhlIGNvbXBvbmVudCByZW5kZXJzLFxuc28gdGhlcmUncyBubyBuZWVkIHRvIG1hbnVhbGx5IHRyaWdnZXIgdGhlIHJlcXVlc3Qgb24gbW91bnQuIiksbWR4KCJoMiIseyJpZCI6InRyaWdnZXItZnVuY3Rpb24ifSwiVHJpZ2dlciBGdW5jdGlvbiIpLG1keCgicCIsbnVsbCwiWW91IGNhbiBwYXNzIHBhcmFtZXRlcnMgdG8gdGhlIHRyaWdnZXIgZnVuY3Rpb24uIEZvciBtdWx0aXBsZSBwYXJhbWV0ZXJzLCB1c2UgYW4gYXJyYXkuIiksbWR4KFByZXZpZXcse3RhYk5hbWVzOlsnSmF2YVNjcmlwdCcsJ1R5cGVTY3JpcHQnXSxtZHhUeXBlOiJQcmV2aWV3In0sbWR4KCJlZGl0b3IiLG51bGwsImNvbnN0IFtyZWYsIGdldCwgaXRlbSwgc2V0SXRlbV0gPSB1c2VSZXF1ZXN0KChpZCkgPT4gYXhpb3MuZ2V0KGB1c2Vycy8ke2lkfWApKTtcbmNvbnN0IFt1cGRhdGVSZWYsIHVwZGF0ZV0gPSB1c2VSZXF1ZXN0KChbaWQsIGRhdGFdKSA9PiBheGlvcy5wYXRjaChgdXNlcnMvJHtpZH1gKSk7XG5nZXQoMSk7XG51cGRhdGUoWzEsIHsgbmFtZTogJ2Zvbyd9XSk7XG4iKSxtZHgoImVkaXRvciIsbnVsbCwiY29uc3QgW3JlZiwgZ2V0LCBpdGVtLCBzZXRJdGVtXSA9IHVzZVJlcXVlc3QoKGlkOiBudW1iZXIpID0+IGF4aW9zLmdldDxVc2VyPihgdXNlcnMvJHtpZH1gKSk7XG5jb25zdCBbdXBkYXRlUmVmLCB1cGRhdGVdID0gdXNlUmVxdWVzdCgoW2lkLCBkYXRhXTogW251bWJlciwgVXNlcl0pID0+IGF4aW9zLnBhdGNoKGB1c2Vycy8ke2lkfWAsIGRhdGEpKTtcbmdldCgxKTsgLy8gdHlwZSBpcyBpbmZlcnJlZFxudXBkYXRlKFsxLCB7IG5hbWU6ICdmb28nfV0pOyAvLyB0eXBlIGlzIGluZmVycmVkXG4iKSksbWR4KCJoMyIseyJpZCI6ImNhbGxiYWNrIn0sIkNhbGxiYWNrIiksbWR4KCJwIixudWxsLCJJdCBpcyBwb3NzaWJsZSB0byBwYXNzIGEgY2FsbGJhY2sgdG8gYSB0cmlnZ2VyIGZ1bmN0aW9uLiBJdCdsbCBiZSBjYWxsZWQgb25jZSB0aGUgcmVxdWVzdCBpcyBjb21wbGV0ZWQuXG5XaGVuIGFuIGVycm9yIGlzIGVuY291bnRlcmVkLCBpdCB3aWxsIG5vdCBiZSBjYWxsZWQuIiksbWR4KFByZXZpZXcse3RhYk5hbWVzOlsnSmF2YVNjcmlwdCcsJ1R5cGVTY3JpcHQnXSxtZHhUeXBlOiJQcmV2aWV3In0sbWR4KCJlZGl0b3IiLG51bGwsImNvbnN0IFtyZWYsIGdldCwgaXRlbSwgc2V0SXRlbV0gPSB1c2VSZXF1ZXN0KChpZCkgPT4gYXhpb3MuZ2V0KGB1c2Vycy8ke2lkfWApKTtcbmdldCgxLCByZXN1bHQgPT4ge1xuICAvLyBkbyBzb21ldGhpbmdcbn0pO1xuIiksbWR4KCJlZGl0b3IiLG51bGwsImNvbnN0IFtyZWYsIGdldCwgaXRlbSwgc2V0SXRlbV0gPSB1c2VSZXF1ZXN0KChpZDogbnVtYmVyKSA9PiBheGlvcy5nZXQ8VXNlcj4oYHVzZXJzLyR7aWR9YCkpO1xuZ2V0KDEsIHJlc3VsdCA9PiB7XG4gIC8vIGRvIHNvbWV0aGluZ1xuICAvLyB0eXBlIG9mIHJlc3VsdCBpcyAnVXNlcidcbn0pO1xuIikpLG1keCgiaDIiLHsiaWQiOiJleGFtcGxlIn0sIkV4YW1wbGUiKSxtZHgoUHJldmlldyx7bWR4VHlwZToiUHJldmlldyJ9LG1keChVc2VSZXF1ZXN0RXhhbXBsZSx7bWR4VHlwZToiVXNlUmVxdWVzdEV4YW1wbGUifSksbWR4KCJlZGl0b3IiLG51bGwsVXNlUmVxdWVzdEV4YW1wbGVTb3VyY2UpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToiZG9jcy9ob29rcy91c2UtcmVxdWVzdC5tZHgifX0pO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/mnt/0CC5166B0CC5166B/Work/react-fetcher-hooks/packages/demo/docs/hooks/use-request.mdx"],"names":["React","mdx","Preview","UseRequestExample","UseRequestExampleSource","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"gNACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,cACA,MAAO,qBAAP,CACA,MAAO,qBAAP,CACA,MAAO,qCAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,wCAA9B,CACA,MAAOC,CAAAA,uBAAP,KAAoC,wDAApC,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,YADA,CAAR,cAFK,CAKL,6CAAoC,kBAAY,UAAU,CAAC,GAAvB,eAApC,wBALK,CAML,SAAQ,CACN,KAAM,OADA,CAAR,SANK,CASL,aAAG,kBAAY,UAAU,CAAC,GAAvB,+EAAH,CAAyH,UAAI,UAAU,CAAC,GAAf,EAAzH,+GACwG,kBAAY,UAAU,CAAC,GAAvB,aADxG,yFAEgF,kBAAY,UAAU,CAAC,GAAvB,eAFhF,OATK,CAYL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,+EAAL,CAZK,CAgBL,8KAhBK,CAkBL,SAAQ,CACN,KAAM,kBADA,CAAR,oBAlBK,CAqBL,uGArBK,CAsBL,IAAC,OAAD,EAAS,QAAQ,CAAE,CAAC,YAAD,CAAe,YAAf,CAAnB,CAAiD,OAAO,CAAC,SAAzD,EACF,kOADE,CAQF,8SARE,CAtBK,CAsCL,SAAQ,CACN,KAAM,UADA,CAAR,YAtCK,CAyCL,6KAzCK,CA2CL,IAAC,OAAD,EAAS,QAAQ,CAAE,CAAC,YAAD,CAAe,YAAf,CAAnB,CAAiD,OAAO,CAAC,SAAzD,EACF,kJADE,CAQF,+LARE,CA3CK,CA4DL,SAAQ,CACN,KAAM,SADA,CAAR,WA5DK,CAgEL,IAAC,OAAD,EAAS,OAAO,CAAC,SAAjB,EACF,IAAC,iBAAD,EAAmB,OAAO,CAAC,mBAA3B,EADE,CAEF,kBAASV,uBAAT,CAFE,CAhEK,CAAP,CAqED,C,sQAED,CACAS,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport 'bulma/css/bulma.css';\nimport '../../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport Preview from '../../src/Preview.tsx';\nimport UseRequestExample from '../../src/components/UseRequestExample';\nimport UseRequestExampleSource from '!raw-loader!../../src/components/UseRequestExample.tsx';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"userequest\"\n    }}>{`UseRequest`}</h1>\n    <p>{`This is a simpler version of `}<inlineCode parentName=\"p\">{`useFetcher`}</inlineCode>{` to avoid verbosity.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p><inlineCode parentName=\"p\">{`useRequest(request: (...args: any[]) => AxiosPromise, autoFetch?: boolean)`}</inlineCode><br parentName=\"p\"></br>{`\n`}{`This hook returns a reference, a function to trigger the request, as well as a getter and setter from `}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{`.\nYou can use your own axios instance (with configured base path, for example) with `}<inlineCode parentName=\"p\">{`useRequest`}</inlineCode>{`.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`const [ref, get, items, setItems] = useRequest(() => axios.get('users'))\n`}</code></pre>\n    <p>{`When passing true to the second argument, fetching will happen as soon as the component renders,\nso there's no need to manually trigger the request on mount.`}</p>\n    <h2 {...{\n      \"id\": \"trigger-function\"\n    }}>{`Trigger Function`}</h2>\n    <p>{`You can pass parameters to the trigger function. For multiple parameters, use an array.`}</p>\n    <Preview tabNames={['JavaScript', 'TypeScript']} mdxType=\"Preview\">\n  <editor>\n        {`const [ref, get, item, setItem] = useRequest((id) => axios.get(\\`users/\\${id}\\`));\nconst [updateRef, update] = useRequest(([id, data]) => axios.patch(\\`users/\\${id}\\`));\nget(1);\nupdate([1, { name: 'foo'}]);\n`}\n  </editor>\n  <editor>\n        {`const [ref, get, item, setItem] = useRequest((id: number) => axios.get<User>(\\`users/\\${id}\\`));\nconst [updateRef, update] = useRequest(([id, data]: [number, User]) => axios.patch(\\`users/\\${id}\\`, data));\nget(1); // type is inferred\nupdate([1, { name: 'foo'}]); // type is inferred\n`}\n  </editor>\n    </Preview>\n    <h3 {...{\n      \"id\": \"callback\"\n    }}>{`Callback`}</h3>\n    <p>{`It is possible to pass a callback to a trigger function. It'll be called once the request is completed.\nWhen an error is encountered, it will not be called.`}</p>\n    <Preview tabNames={['JavaScript', 'TypeScript']} mdxType=\"Preview\">\n  <editor>\n        {`const [ref, get, item, setItem] = useRequest((id) => axios.get(\\`users/\\${id}\\`));\nget(1, result => {\n  // do something\n});\n`}\n  </editor>\n  <editor>\n        {`const [ref, get, item, setItem] = useRequest((id: number) => axios.get<User>(\\`users/\\${id}\\`));\nget(1, result => {\n  // do something\n  // type of result is 'User'\n});\n`}\n  </editor>\n    </Preview>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n\n    <Preview mdxType=\"Preview\">\n  <UseRequestExample mdxType=\"UseRequestExample\" />\n  <editor>{UseRequestExampleSource}</editor>\n    </Preview>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}