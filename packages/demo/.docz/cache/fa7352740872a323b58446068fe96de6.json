{"remainingRequest":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--11-1!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/babel-loader/lib/index.js??ref--11-2!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/source-map-loader/index.js!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/packages/demo/src/components/ProgressExample.tsx","dependencies":[{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/packages/demo/src/components/ProgressExample.tsx","mtime":1570389590992},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1562869367178},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1565884443058},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/babel-loader/lib/index.js","mtime":1562869367050},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/node_modules/source-map-loader/index.js","mtime":1562869367869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL25vZGVfbW9kdWxlcy9kb2N6LWNvcmUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL3BhY2thZ2VzL2RlbW8vc3JjL2NvbXBvbmVudHMvUHJvZ3Jlc3NFeGFtcGxlLnRzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5lbnRlck1vZHVsZSA6IHVuZGVmaW5lZDsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdC5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgdXNlUmVxdWVzdCwgRmV0Y2hlciB9IGZyb20gJ3JlYWN0LWZldGNoZXItaG9va3MnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpjb25zdCBvcHRpb25zID0gewogIHByb2dyZXNzOiB7CiAgICBzaG93OiB0cnVlCiAgfQp9OwoKY29uc3QgQmFzaWNFeGFtcGxlID0gKCkgPT4gewogIGNvbnN0IF91c2VSZXF1ZXN0ID0gdXNlUmVxdWVzdCgoKSA9PiBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmNodWNrbm9ycmlzLmlvL2pva2VzL3JhbmRvbScpLCB0cnVlKSwKICAgICAgICBfdXNlUmVxdWVzdDIgPSBfc2xpY2VkVG9BcnJheShfdXNlUmVxdWVzdCwgMyksCiAgICAgICAgcmVmID0gX3VzZVJlcXVlc3QyWzBdLAogICAgICAgIGdldEpzb24gPSBfdXNlUmVxdWVzdDJbMV0sCiAgICAgICAganNvbiA9IF91c2VSZXF1ZXN0MlsyXTsKCiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogInRlc3QtY29udGFpbmVyIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChGZXRjaGVyLCB7CiAgICByZWZzOiBbcmVmXSwKICAgIG9wdGlvbnM6IG9wdGlvbnMsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLCB7CiAgICBjbGFzc05hbWU6ICJteS10aXRsZSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJSYW5kb20gSlNPTiBsb2FkZXIiKSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAibXktY29udGVudCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiY29kZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgSlNPTi5zdHJpbmdpZnkoanNvbiwgbnVsbCwgMikpKSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogIm15LWZvb3RlciIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImEiLCB7CiAgICBjbGFzc05hbWU6ICJidXR0b24gaXMtcHJpbWFyeSIsCiAgICBvbkNsaWNrOiBnZXRKc29uLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUmVmcmVzaCIpKSkpOwp9OwoKX19zaWduYXR1cmVfXyhCYXNpY0V4YW1wbGUsICJ1c2VSZXF1ZXN0e1tyZWYsIGdldEpzb24sIGpzb25dfSIsICgpID0+IFt1c2VSZXF1ZXN0XSk7Cgpjb25zdCBfZGVmYXVsdCA9IEJhc2ljRXhhbXBsZTsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIEJhc2ljRXhhbXBsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgQmFzaWNFeGFtcGxlICYmIEJhc2ljRXhhbXBsZSA9PT0gT2JqZWN0KEJhc2ljRXhhbXBsZSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShCYXNpY0V4YW1wbGUpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJhc2ljRXhhbXBsZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkJhc2ljRXhhbXBsZSIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvUHJvZ3Jlc3NFeGFtcGxlLnRzeCIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdCA6IHVuZGVmaW5lZDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIob3B0aW9ucywgIm9wdGlvbnMiLCAiL21lZGlhL2N5cmlhYy8wQ0M1MTY2QjBDQzUxNjZCL1dvcmsvcmVhY3QtdXNlLWZldGNoZXIvcGFja2FnZXMvZGVtby9zcmMvY29tcG9uZW50cy9Qcm9ncmVzc0V4YW1wbGUudHN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoQmFzaWNFeGFtcGxlLCAiQmFzaWNFeGFtcGxlIiwgIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL3BhY2thZ2VzL2RlbW8vc3JjL2NvbXBvbmVudHMvUHJvZ3Jlc3NFeGFtcGxlLnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvbWVkaWEvY3lyaWFjLzBDQzUxNjZCMENDNTE2NkIvV29yay9yZWFjdC11c2UtZmV0Y2hlci9wYWNrYWdlcy9kZW1vL3NyYy9jb21wb25lbnRzL1Byb2dyZXNzRXhhbXBsZS50c3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/packages/demo/src/components/ProgressExample.tsx"],"names":["React","useRequest","Fetcher","axios","options","progress","show","BasicExample","get","ref","getJson","json","JSON","stringify"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoD,qBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAuB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE;AADoB,CAAhC;;AAMA,MAAMC,YAAY,GAAG,MAAM;AAAA,sBACIN,UAAU,CACrC,MAAME,KAAK,CAACK,GAAN,CAAe,yCAAf,CAD+B,EAErC,IAFqC,CADd;AAAA;AAAA,QAClBC,GADkB;AAAA,QACbC,OADa;AAAA,QACJC,IADI;;AAMzB,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,CAACF,GAAD,CAAf;AAAsB,IAAA,OAAO,EAAEL,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOQ,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAP,CADF,CADF,CAFF,EAOE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAiC,IAAA,OAAO,EAAED,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAPF,CADF,CADF;AAiBD,CAvBD;;cAAMH,Y,6CACyBN,U;;iBAwBhBM,Y;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA/BMH,O;0BAMAG,Y","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRequest, Fetcher, FetcherOptions } from 'react-fetcher-hooks';\nimport axios from 'axios';\n\nconst options: FetcherOptions = {\n  progress: {\n    show: true\n  }\n};\n\nconst BasicExample = () => {\n  const [ref, getJson, json] = useRequest(\n    () => axios.get<any>('https://api.chucknorris.io/jokes/random'),\n    true\n  );\n\n  return (\n    <div className='test-container'>\n      <Fetcher refs={[ref]} options={options}>\n        <span className='my-title'>Random JSON loader</span>\n        <div className='my-content'>\n          <pre>\n            <code>{JSON.stringify(json, null, 2)}</code>\n          </pre>\n        </div>\n        <div className='my-footer'>\n          <a className='button is-primary' onClick={getJson}>\n            Refresh\n          </a>\n        </div>\n      </Fetcher>\n    </div>\n  );\n};\n\nexport default BasicExample;\n"]}]}