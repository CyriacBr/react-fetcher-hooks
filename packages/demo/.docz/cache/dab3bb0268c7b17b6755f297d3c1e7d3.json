{"remainingRequest":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--11-1!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/babel-loader/lib/index.js??ref--11-2!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/source-map-loader/index.js!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/src/components/ListenerExample.tsx","dependencies":[{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/src/components/ListenerExample.tsx","mtime":1565884136838},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1562869367178},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1565884443058},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/babel-loader/lib/index.js","mtime":1562869367050},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/source-map-loader/index.js","mtime":1562869367869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2RlbW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2RlbW8vc3JjL2NvbXBvbmVudHMvTGlzdGVuZXJFeGFtcGxlLnRzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5lbnRlck1vZHVsZSA6IHVuZGVmaW5lZDsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdC5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IHVzZUZldGNoZXIsIEZldGNoZXIgfSBmcm9tICd1c2UtZmV0Y2hlci1yZWFjdCc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7Cgpjb25zdCBMaXN0ZW5lckV4YW1wbGUgPSAoKSA9PiB7CiAgY29uc3QgZmV0Y2hlciA9IHVzZUZldGNoZXIoewogICAgd3JhcHBlclN0eWxlczogewogICAgICBkaXNwbGF5OiAnbm9uZScKICAgIH0KICB9KTsKCiAgY29uc3QgX3VzZVN0YXRlID0gdXNlU3RhdGUoJ05vIHJlc3VsdCB5ZXQnKSwKICAgICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgICBqc29uID0gX3VzZVN0YXRlMlswXSwKICAgICAgICBzZXRKc29uID0gX3VzZVN0YXRlMlsxXTsKCiAgY29uc3QgX3VzZVN0YXRlMyA9IHVzZVN0YXRlKCdidXR0b24gaXMtcHJpbWFyeScpLAogICAgICAgIF91c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLCAyKSwKICAgICAgICBidG5DbGFzcyA9IF91c2VTdGF0ZTRbMF0sCiAgICAgICAgc2V0QnRuQ2xhc3MgPSBfdXNlU3RhdGU0WzFdOwoKICBjb25zdCBsb2FkRGF0YSA9ICgpID0+IHsKICAgIGxldCByZXF1ZXN0ID0gKCkgPT4gYXhpb3MuZ2V0KCdodHRwczovL2FwaS5jaHVja25vcnJpcy5pby9qb2tlcy9yYW5kb20nKTsKCiAgICBmZXRjaGVyLmZldGNoKHJlcXVlc3QsIGRhdGEgPT4gewogICAgICBzZXRKc29uKEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpKTsKICAgIH0pOwogIH07CgogIHVzZUVmZmVjdCgoKSA9PiB7CiAgICBmZXRjaGVyLmFkZExpc3RlbmVyKCdmZXRjaC1zdGFydCcsICgpID0+IHNldEJ0bkNsYXNzKCdidXR0b24gaXMtcHJpbWFyeSBpcy1sb2FkaW5nJykpOwogICAgZmV0Y2hlci5hZGRMaXN0ZW5lcignYWxsLWZldGNoLWVuZCcsICgpID0+IHNldEJ0bkNsYXNzKCdidXR0b24gaXMtcHJpbWFyeScpKTsKICAgIGxvYWREYXRhKCk7CiAgfSwgW10pOwogIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJ0ZXN0LWNvbnRhaW5lciIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRmV0Y2hlciwgewogICAgZmV0Y2hlcjogZmV0Y2hlciwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsKICAgIGNsYXNzTmFtZTogIm15LXRpdGxlIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlJhbmRvbSBKU09OIGxvYWRlciIpLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJteS1jb250ZW50IiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJjb2RlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBqc29uKSkpLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJteS1mb290ZXIiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJhIiwgewogICAgY2xhc3NOYW1lOiBidG5DbGFzcywKICAgIG9uQ2xpY2s6IGxvYWREYXRhLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUmVmcmVzaCIpKSkpOwp9OwoKX19zaWduYXR1cmVfXyhMaXN0ZW5lckV4YW1wbGUsICJ1c2VGZXRjaGVye2ZldGNoZXJ9XG51c2VTdGF0ZXtbanNvbiwgc2V0SnNvbl0oJ05vIHJlc3VsdCB5ZXQnKX1cbnVzZVN0YXRle1tidG5DbGFzcywgc2V0QnRuQ2xhc3NdKCdidXR0b24gaXMtcHJpbWFyeScpfVxudXNlRWZmZWN0e30iLCAoKSA9PiBbdXNlRmV0Y2hlcl0pOwoKY29uc3QgX2RlZmF1bHQgPSBMaXN0ZW5lckV4YW1wbGU7CmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0OwoKaWYgKHR5cGVvZiBMaXN0ZW5lckV4YW1wbGUgIT09ICd1bmRlZmluZWQnICYmIExpc3RlbmVyRXhhbXBsZSAmJiBMaXN0ZW5lckV4YW1wbGUgPT09IE9iamVjdChMaXN0ZW5lckV4YW1wbGUpICYmIE9iamVjdC5pc0V4dGVuc2libGUoTGlzdGVuZXJFeGFtcGxlKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShMaXN0ZW5lckV4YW1wbGUsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJMaXN0ZW5lckV4YW1wbGUiLAogICAgICBmaWxlbmFtZTogInNyYy9jb21wb25lbnRzL0xpc3RlbmVyRXhhbXBsZS50c3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQgOiB1bmRlZmluZWQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKExpc3RlbmVyRXhhbXBsZSwgIkxpc3RlbmVyRXhhbXBsZSIsICIvbWVkaWEvY3lyaWFjLzBDQzUxNjZCMENDNTE2NkIvV29yay9yZWFjdC11c2UtZmV0Y2hlci9kZW1vL3NyYy9jb21wb25lbnRzL0xpc3RlbmVyRXhhbXBsZS50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL21lZGlhL2N5cmlhYy8wQ0M1MTY2QjBDQzUxNjZCL1dvcmsvcmVhY3QtdXNlLWZldGNoZXIvZGVtby9zcmMvY29tcG9uZW50cy9MaXN0ZW5lckV4YW1wbGUudHN4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5sZWF2ZU1vZHVsZSA6IHVuZGVmaW5lZDsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/src/components/ListenerExample.tsx"],"names":["React","useState","useEffect","useFetcher","Fetcher","axios","ListenerExample","fetcher","wrapperStyles","display","json","setJson","btnClass","setBtnClass","loadData","request","get","fetch","data","JSON","stringify","addListener"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,OAAO,GAAGJ,UAAU,CAAC;AACzBK,IAAAA,aAAa,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AADU,GAAD,CAA1B;;AAD4B,oBAIJR,QAAQ,CAAC,eAAD,CAJJ;AAAA;AAAA,QAIrBS,IAJqB;AAAA,QAIfC,OAJe;;AAAA,qBAKIV,QAAQ,CAAC,mBAAD,CALZ;AAAA;AAAA,QAKrBW,QALqB;AAAA,QAKXC,WALW;;AAO5B,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,yCAAV,CAApB;;AACAT,IAAAA,OAAO,CAACU,KAAR,CAAcF,OAAd,EAAuBG,IAAI,IAAI;AAC7BP,MAAAA,OAAO,CAACQ,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAD,CAAP;AACD,KAFD;AAGD,GALD;;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACc,WAAR,CAAoB,aAApB,EAAmC,MAAMR,WAAW,CAAC,8BAAD,CAApD;AACAN,IAAAA,OAAO,CAACc,WAAR,CAAoB,eAApB,EAAqC,MAAMR,WAAW,CAAC,mBAAD,CAAtD;AACAC,IAAAA,QAAQ;AACT,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEP,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOG,IAAP,CADF,CADF,CAFF,EAOE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEE,QAAd;AAAwB,IAAA,OAAO,EAAEE,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAPF,CADF,CADF;AAiBD,CArCD;;cAAMR,e,iJACYH,U;;iBAsCHG,e;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAvCMA,e","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFetcher, Fetcher } from 'use-fetcher-react';\nimport axios from 'axios';\n\nconst ListenerExample = () => {\n  const fetcher = useFetcher({\n    wrapperStyles: { display: 'none'}\n  });\n  const [json, setJson] = useState('No result yet');\n  const [btnClass, setBtnClass] = useState('button is-primary');\n\n  const loadData = () => {\n    let request = () => axios.get('https://api.chucknorris.io/jokes/random');\n    fetcher.fetch(request, data => {\n      setJson(JSON.stringify(data, null, 2));\n    });\n  };\n\n  useEffect(() => {\n    fetcher.addListener('fetch-start', () => setBtnClass('button is-primary is-loading'));\n    fetcher.addListener('all-fetch-end', () => setBtnClass('button is-primary'));\n    loadData();\n  }, []);\n\n  return (\n    <div className=\"test-container\">\n      <Fetcher fetcher={fetcher}>\n        <span className=\"my-title\">Random JSON loader</span>\n        <div className=\"my-content\">\n          <pre>\n            <code>{json}</code>\n          </pre>\n        </div>\n        <div className=\"my-footer\">\n          <a className={btnClass} onClick={loadData}>\n            Refresh\n          </a>\n        </div>\n      </Fetcher>\n    </div>\n  );\n};\n\nexport default ListenerExample;\n"]}]}