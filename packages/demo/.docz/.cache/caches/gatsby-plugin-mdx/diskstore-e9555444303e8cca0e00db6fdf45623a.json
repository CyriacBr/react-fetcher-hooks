{"expireTime":9007200825219446000,"key":"gatsby-plugin-mdx-entire-payload-bc6af0ba1ab2f4c5ccabd27c6d3f3c43-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/media/cyriac/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":134,"offset":135},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":137},"end":{"line":5,"column":29,"offset":165},"indent":[]}},{"type":"import","value":"import 'bulma/css/bulma.css';\nimport '../../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';","position":{"start":{"line":8,"column":1,"offset":168},"end":{"line":10,"column":46,"offset":273},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Error","position":{"start":{"line":12,"column":3,"offset":277},"end":{"line":12,"column":8,"offset":282},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":275},"end":{"line":12,"column":8,"offset":282},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When an ongoing request from a tied ","position":{"start":{"line":14,"column":1,"offset":284},"end":{"line":14,"column":37,"offset":320},"indent":[]}},{"type":"inlineCode","value":"FetcherReference","position":{"start":{"line":14,"column":37,"offset":320},"end":{"line":14,"column":55,"offset":338},"indent":[]}},{"type":"text","value":" fails, an overlay component is rendered\nto give a proper feedback to the user.","position":{"start":{"line":14,"column":55,"offset":338},"end":{"line":15,"column":39,"offset":417},"indent":[1]}}],"position":{"start":{"line":14,"column":1,"offset":284},"end":{"line":15,"column":39,"offset":417},"indent":[1]}},{"type":"import","value":"import FailExample from '../../src/components/FailExample.tsx';","position":{"start":{"line":17,"column":1,"offset":419},"end":{"line":17,"column":64,"offset":482},"indent":[]}},{"type":"jsx","value":"<FailExample />","position":{"start":{"line":19,"column":1,"offset":484},"end":{"line":19,"column":16,"offset":499},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":21,"column":1,"offset":501},"end":{"line":21,"column":31,"offset":531},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":21,"column":31,"offset":531}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/media/cyriac/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport 'bulma/css/bulma.css';\nimport '../../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport FailExample from '../../src/components/FailExample.tsx';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"error\"\n    }}>{`Error`}</h1>\n    <p>{`When an ongoing request from a tied `}<inlineCode parentName=\"p\">{`FetcherReference`}</inlineCode>{` fails, an overlay component is rendered\nto give a proper feedback to the user.`}</p>\n\n    <FailExample mdxType=\"FailExample\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}