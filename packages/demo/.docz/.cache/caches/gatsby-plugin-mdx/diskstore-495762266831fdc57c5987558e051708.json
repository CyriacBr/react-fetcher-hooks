{"expireTime":9007200825219446000,"key":"gatsby-plugin-mdx-entire-payload-6926ea18d4d08e3377619bdac280614f-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/media/cyriac/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":134,"offset":135},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":137},"end":{"line":5,"column":29,"offset":165},"indent":[]}},{"type":"import","value":"import 'bulma/css/bulma.css';\nimport '../../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport Preview from '../../src/Preview.tsx';","position":{"start":{"line":8,"column":1,"offset":168},"end":{"line":11,"column":45,"offset":318},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"UseRequest","position":{"start":{"line":13,"column":3,"offset":322},"end":{"line":13,"column":13,"offset":332},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":320},"end":{"line":13,"column":13,"offset":332},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is a simpler version of ","position":{"start":{"line":15,"column":1,"offset":334},"end":{"line":15,"column":30,"offset":363},"indent":[]}},{"type":"inlineCode","value":"useFetcher","position":{"start":{"line":15,"column":30,"offset":363},"end":{"line":15,"column":42,"offset":375},"indent":[]}},{"type":"text","value":" and avoid a lot of boilerplate.","position":{"start":{"line":15,"column":42,"offset":375},"end":{"line":15,"column":74,"offset":407},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":334},"end":{"line":15,"column":74,"offset":407},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":17,"column":4,"offset":412},"end":{"line":17,"column":9,"offset":417},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":409},"end":{"line":17,"column":9,"offset":417},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"useRequest","position":{"start":{"line":19,"column":5,"offset":423},"end":{"line":19,"column":15,"offset":433},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":419},"end":{"line":19,"column":15,"offset":433},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"useRequest(request: (...args: any[]) => AxiosPromise, autoFetch?: boolean)","position":{"start":{"line":20,"column":1,"offset":434},"end":{"line":20,"column":77,"offset":510},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":434},"end":{"line":20,"column":77,"offset":510},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":23,"column":1,"offset":513},"end":{"line":23,"column":31,"offset":543},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":23,"column":31,"offset":543}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/media/cyriac/0CC5166B0CC5166B/Work/react-fetcher-hooks/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nimport 'bulma/css/bulma.css';\nimport '../../src/index.css';\nimport 'react-fetcher-hooks/dist/styles.css';\nimport Preview from '../../src/Preview.tsx';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"userequest\"\n    }}>{`UseRequest`}</h1>\n    <p>{`This is a simpler version of `}<inlineCode parentName=\"p\">{`useFetcher`}</inlineCode>{` and avoid a lot of boilerplate.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"userequest-1\"\n    }}>{`useRequest`}</h3>\n    <p><inlineCode parentName=\"p\">{`useRequest(request: (...args: any[]) => AxiosPromise, autoFetch?: boolean)`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}