{"remainingRequest":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--11-1!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/babel-loader/lib/index.js??ref--11-2!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/source-map-loader/index.js!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/src/components/DashboardExample.tsx","dependencies":[{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/src/components/DashboardExample.tsx","mtime":1565822467704},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1562869367178},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1565884443058},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/babel-loader/lib/index.js","mtime":1562869367050},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/node_modules/source-map-loader/index.js","mtime":1562869367869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2RlbW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2RlbW8vc3JjL2NvbXBvbmVudHMvRGFzaGJvYXJkRXhhbXBsZS50c3giOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyB1c2VGZXRjaGVyLCBGZXRjaGVyIH0gZnJvbSAndXNlLWZldGNoZXItcmVhY3QnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgJ3VzZS1mZXRjaGVyLXJlYWN0L2Rpc3Qvc3R5bGVzLmNzcyc7CmltcG9ydCAnLi4vaW5kZXguY3NzJzsKCmNvbnN0IFRocmVhZHNDb3VudENhcmQgPSAoKSA9PiB7CiAgY29uc3QgZmV0Y2hlciA9IHVzZUZldGNoZXIoKTsKCiAgY29uc3QgX3VzZVN0YXRlID0gdXNlU3RhdGUoMCksCiAgICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgICAgY291bnQgPSBfdXNlU3RhdGUyWzBdLAogICAgICAgIHNldENvdW50ID0gX3VzZVN0YXRlMlsxXTsKCiAgY29uc3QgbG9hZCA9ICgpID0+IHsKICAgIGxldCByZXF1ZXN0ID0gKCkgPT4gYXhpb3MuZ2V0KCdodHRwczovL3d3dy5yZWRkaXQuY29tL3IvbmV3cy9uZXcuanNvbj9saW1pdD0xMDAnKTsKCiAgICBmZXRjaGVyLmZldGNoKHJlcXVlc3QsIHJlc3VsdCA9PiB7CiAgICAgIGNvbnNvbGUubG9nKCdkYXRhIDonLCByZXN1bHQpOwogICAgICBsZXQgbm93ID0gRGF0ZS5ub3coKSAvIDEwMDA7CiAgICAgIGxldCBpdGVtcyA9IHJlc3VsdC5kYXRhLmNoaWxkcmVuLmZpbHRlcihjaGlsZCA9PiB7CiAgICAgICAgbGV0IGNyZWF0ZWRfdXRjID0gY2hpbGQuZGF0YS5jcmVhdGVkX3V0YzsKICAgICAgICBsZXQgc2Vjb25kcyA9IG5vdyAtIGNyZWF0ZWRfdXRjOwogICAgICAgIGNvbnNvbGUubG9nKCdtIDonLCBzZWNvbmRzIC8gNjApOwogICAgICAgIGlmIChzZWNvbmRzIDw9IDYwICogNjAgKiAyNCkgcmV0dXJuIHRydWU7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9KTsKICAgICAgc2V0Q291bnQoaXRlbXMubGVuZ3RoKTsKICAgIH0pOwogIH07CgogIHVzZUVmZmVjdCgoKSA9PiBsb2FkKCksIFtdKTsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAiZGFzaGJvYXJkLWNhcmQiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KEZldGNoZXIsIHsKICAgIGZldGNoZXI6IGZldGNoZXIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogImQtY29udGFpbmVyIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJoNSIsIHsKICAgIGNsYXNzTmFtZTogImQtdGl0bGUiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiTmV3IFBvc3RzIGluIHRoZSBsYXN0IGRheSIpLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIiwgewogICAgY2xhc3NOYW1lOiAiZC12YWx1ZSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIGNvdW50KSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSkpKSk7Cn07CgpfX3NpZ25hdHVyZV9fKFRocmVhZHNDb3VudENhcmQsICJ1c2VGZXRjaGVye2ZldGNoZXJ9XG51c2VTdGF0ZXtbY291bnQsIHNldENvdW50XSgwKX1cbnVzZUVmZmVjdHt9IiwgKCkgPT4gW3VzZUZldGNoZXJdKTsKCmNvbnN0IERhc2hib2FyZEV4YW1wbGUgPSAoKSA9PiB7CiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogImRhc2hib2FyZC1jb250YWluZXIiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFRocmVhZHNDb3VudENhcmQsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDUxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSkpOwp9OwoKY29uc3QgX2RlZmF1bHQgPSBEYXNoYm9hcmRFeGFtcGxlOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgRGFzaGJvYXJkRXhhbXBsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgRGFzaGJvYXJkRXhhbXBsZSAmJiBEYXNoYm9hcmRFeGFtcGxlID09PSBPYmplY3QoRGFzaGJvYXJkRXhhbXBsZSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShEYXNoYm9hcmRFeGFtcGxlKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXNoYm9hcmRFeGFtcGxlLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiRGFzaGJvYXJkRXhhbXBsZSIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvRGFzaGJvYXJkRXhhbXBsZS50c3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQgOiB1bmRlZmluZWQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFRocmVhZHNDb3VudENhcmQsICJUaHJlYWRzQ291bnRDYXJkIiwgIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2RlbW8vc3JjL2NvbXBvbmVudHMvRGFzaGJvYXJkRXhhbXBsZS50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihEYXNoYm9hcmRFeGFtcGxlLCAiRGFzaGJvYXJkRXhhbXBsZSIsICIvbWVkaWEvY3lyaWFjLzBDQzUxNjZCMENDNTE2NkIvV29yay9yZWFjdC11c2UtZmV0Y2hlci9kZW1vL3NyYy9jb21wb25lbnRzL0Rhc2hib2FyZEV4YW1wbGUudHN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2RlbW8vc3JjL2NvbXBvbmVudHMvRGFzaGJvYXJkRXhhbXBsZS50c3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/demo/src/components/DashboardExample.tsx"],"names":["React","useEffect","useState","useFetcher","Fetcher","axios","ThreadsCountCard","fetcher","count","setCount","load","request","get","fetch","result","console","log","now","Date","items","data","children","filter","child","created_utc","seconds","length","DashboardExample"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,mCAAP;AACA,OAAO,cAAP;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAD6B,oBAEHD,QAAQ,CAAC,CAAD,CAFL;AAAA;AAAA,QAEtBM,KAFsB;AAAA,QAEfC,QAFe;;AAI7B,QAAMC,IAAI,GAAG,MAAM;AACjB,QAAIC,OAAO,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,kDAAV,CAApB;;AACAL,IAAAA,OAAO,CAACM,KAAR,CAAcF,OAAd,EAAuBG,MAAM,IAAI;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,UAAIG,GAAG,GAAGC,IAAI,CAACD,GAAL,KAAa,IAAvB;AACA,UAAIE,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAYC,QAAZ,CAAqBC,MAArB,CAA6BC,KAAD,IAAgB;AAAA,YAChDC,WADgD,GAChCD,KAAK,CAACH,IAD0B,CAChDI,WADgD;AAEtD,YAAIC,OAAO,GAAGR,GAAG,GAAGO,WAApB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBS,OAAO,GAAG,EAA7B;AACA,YAAIA,OAAO,IAAI,KAAK,EAAL,GAAU,EAAzB,EAA6B,OAAO,IAAP;AAC7B,eAAO,KAAP;AACD,OANW,CAAZ;AAOAhB,MAAAA,QAAQ,CAACU,KAAK,CAACO,MAAP,CAAR;AACD,KAXD;AAYD,GAdD;;AAgBAzB,EAAAA,SAAS,CAAC,MAAMS,IAAI,EAAX,EAAe,EAAf,CAAT;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEH,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,KAA3B,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,CADF;AAeD,CArCD;;cAAMF,gB,6EACYH,U;;AAsClB,MAAMwB,gBAAgB,GAAG,MAAM;AAE7B,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAPD;;iBASeA,gB;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAhDMrB,gB;0BAuCAqB,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useFetcher, Fetcher } from 'use-fetcher-react';\nimport axios from 'axios';\n\nimport 'use-fetcher-react/dist/styles.css';\nimport '../index.css';\n\nconst ThreadsCountCard = () => {\n  const fetcher = useFetcher();\n  const [count, setCount] = useState(0);\n\n  const load = () => {\n    let request = () => axios.get('https://www.reddit.com/r/news/new.json?limit=100');\n    fetcher.fetch(request, result => {\n      console.log('data :', result);\n      let now = Date.now() / 1000;\n      let items = result.data.children.filter((child: any) => {\n        let { created_utc } = child.data;\n        let seconds = now - created_utc;\n        console.log('m :', seconds / 60);\n        if (seconds <= 60 * 60 * 24) return true;\n        return false;\n      });\n      setCount(items.length);\n    });\n  }\n\n  useEffect(() => load(), []);\n\n  return (\n    <div className=\"dashboard-card\">\n      <Fetcher fetcher={fetcher}>\n        <div className=\"d-container\">\n          <div>\n            <h5 className=\"d-title\">New Posts in the last day</h5>\n            <span className=\"d-value\">{count}</span>\n          </div>\n          <div>\n\n          </div>\n        </div>\n      </Fetcher>\n    </div>\n  );\n}\n\nconst DashboardExample = () => {\n\n  return (\n    <div className=\"dashboard-container\">\n      <ThreadsCountCard />\n    </div>\n  );\n};\n\nexport default DashboardExample;\n"]}]}