{"remainingRequest":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/thread-loader/dist/cjs.js??ref--5-1!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/source-map-loader/index.js!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/src/components/DashboardExample.jsx","dependencies":[{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/src/components/DashboardExample.jsx","mtime":1562878205987},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/cache-loader/dist/cjs.js","mtime":1562869367178},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/thread-loader/dist/cjs.js","mtime":1562869367900},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562869367050},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/source-map-loader/index.js","mtime":1562869367869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2V4YW1wbGUvbm9kZV9tb2R1bGVzL2RvY3otY29yZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CnZhciBfanN4RmlsZU5hbWUgPSAiL21lZGlhL2N5cmlhYy8wQ0M1MTY2QjBDQzUxNjZCL1dvcmsvcmVhY3QtdXNlLWZldGNoZXIvZXhhbXBsZS9zcmMvY29tcG9uZW50cy9EYXNoYm9hcmRFeGFtcGxlLmpzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgppbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgdXNlRmV0Y2hlciwgRmV0Y2hlciB9IGZyb20gJ3VzZS1mZXRjaGVyLXJlYWN0JzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0ICd1c2UtZmV0Y2hlci1yZWFjdC9kaXN0L3N0eWxlcy5jc3MnOwppbXBvcnQgJy4uL2luZGV4LmNzcyc7Cgp2YXIgVGhyZWFkc0NvdW50Q2FyZCA9IGZ1bmN0aW9uIFRocmVhZHNDb3VudENhcmQoKSB7CiAgdmFyIGZldGNoZXIgPSB1c2VGZXRjaGVyKCk7CgogIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZSgwKSwKICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgIGNvdW50ID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0Q291bnQgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgbG9hZCA9IGZ1bmN0aW9uIGxvYWQoKSB7CiAgICB2YXIgcmVxdWVzdCA9IGF4aW9zLmdldCgnaHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL25ld3MvbmV3Lmpzb24/bGltaXQ9MTAwJyk7CiAgICBmZXRjaGVyLmZldGNoKHJlcXVlc3QsIGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgY29uc29sZS5sb2coJ2RhdGEgOicsIHJlc3VsdCk7CiAgICAgIHZhciBub3cgPSBEYXRlLm5vdygpIC8gMTAwMDsKICAgICAgdmFyIGl0ZW1zID0gcmVzdWx0LmRhdGEuY2hpbGRyZW4uZmlsdGVyKGZ1bmN0aW9uIChjaGlsZCkgewogICAgICAgIHZhciBjcmVhdGVkX3V0YyA9IGNoaWxkLmRhdGEuY3JlYXRlZF91dGM7CiAgICAgICAgdmFyIHNlY29uZHMgPSBub3cgLSBjcmVhdGVkX3V0YzsKICAgICAgICBjb25zb2xlLmxvZygnbSA6Jywgc2Vjb25kcyAvIDYwKTsKICAgICAgICBpZiAoc2Vjb25kcyA8PSA2MCAqIDYwICogMjQpIHJldHVybiB0cnVlOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSk7CiAgICAgIHNldENvdW50KGl0ZW1zLmxlbmd0aCk7CiAgICB9KTsKICB9OwoKICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIGxvYWQoKTsKICB9LCBbXSk7CiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogImRhc2hib2FyZC1jYXJkIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChGZXRjaGVyLCB7CiAgICBmZXRjaGVyOiBmZXRjaGVyLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJkLWNvbnRhaW5lciIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgiaDUiLCB7CiAgICBjbGFzc05hbWU6ICJkLXRpdGxlIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIk5ldyBQb3N0cyBpbiB0aGUgbGFzdCBkYXkiKSwgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsKICAgIGNsYXNzTmFtZTogImQtdmFsdWUiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBjb3VudCkpLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pKSkpOwp9OwoKX19zaWduYXR1cmVfXyhUaHJlYWRzQ291bnRDYXJkLCAidXNlRmV0Y2hlcntmZXRjaGVyfVxudXNlU3RhdGV7W2NvdW50LCBzZXRDb3VudF0oMCl9XG51c2VFZmZlY3R7fSIsIGZ1bmN0aW9uICgpIHsKICByZXR1cm4gW3VzZUZldGNoZXJdOwp9KTsKCnZhciBEYXNoYm9hcmRFeGFtcGxlID0gZnVuY3Rpb24gRGFzaGJvYXJkRXhhbXBsZSgpIHsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAiZGFzaGJvYXJkLWNvbnRhaW5lciIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1MAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGhyZWFkc0NvdW50Q2FyZCwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSk7Cn07Cgp2YXIgX2RlZmF1bHQgPSBEYXNoYm9hcmRFeGFtcGxlOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgRGFzaGJvYXJkRXhhbXBsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgRGFzaGJvYXJkRXhhbXBsZSAmJiBEYXNoYm9hcmRFeGFtcGxlID09PSBPYmplY3QoRGFzaGJvYXJkRXhhbXBsZSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShEYXNoYm9hcmRFeGFtcGxlKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEYXNoYm9hcmRFeGFtcGxlLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiRGFzaGJvYXJkRXhhbXBsZSIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvRGFzaGJvYXJkRXhhbXBsZS5qc3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoVGhyZWFkc0NvdW50Q2FyZCwgIlRocmVhZHNDb3VudENhcmQiLCAiL21lZGlhL2N5cmlhYy8wQ0M1MTY2QjBDQzUxNjZCL1dvcmsvcmVhY3QtdXNlLWZldGNoZXIvZXhhbXBsZS9zcmMvY29tcG9uZW50cy9EYXNoYm9hcmRFeGFtcGxlLmpzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKERhc2hib2FyZEV4YW1wbGUsICJEYXNoYm9hcmRFeGFtcGxlIiwgIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2V4YW1wbGUvc3JjL2NvbXBvbmVudHMvRGFzaGJvYXJkRXhhbXBsZS5qc3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL21lZGlhL2N5cmlhYy8wQ0M1MTY2QjBDQzUxNjZCL1dvcmsvcmVhY3QtdXNlLWZldGNoZXIvZXhhbXBsZS9zcmMvY29tcG9uZW50cy9EYXNoYm9hcmRFeGFtcGxlLmpzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/src/components/DashboardExample.jsx"],"names":["React","useEffect","useState","useFetcher","Fetcher","axios","ThreadsCountCard","fetcher","count","setCount","load","request","get","fetch","result","console","log","now","Date","items","data","children","filter","child","created_utc","seconds","length","DashboardExample"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,mCAAP;AACA,OAAO,cAAP;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAD6B,kBAEHD,QAAQ,CAAC,CAAD,CAFL;AAAA;AAAA,MAEtBM,KAFsB;AAAA,MAEfC,QAFe;;AAI7B,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,QAAIC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAU,kDAAV,CAAd;AACAL,IAAAA,OAAO,CAACM,KAAR,CAAcF,OAAd,EAAuB,UAAAG,MAAM,EAAI;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,UAAIG,GAAG,GAAGC,IAAI,CAACD,GAAL,KAAa,IAAvB;AACA,UAAIE,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAYC,QAAZ,CAAqBC,MAArB,CAA4B,UAAAC,KAAK,EAAI;AAAA,YACzCC,WADyC,GACzBD,KAAK,CAACH,IADmB,CACzCI,WADyC;AAE/C,YAAIC,OAAO,GAAGR,GAAG,GAAGO,WAApB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBS,OAAO,GAAG,EAA7B;AACA,YAAIA,OAAO,IAAI,KAAK,EAAL,GAAU,EAAzB,EAA6B,OAAO,IAAP;AAC7B,eAAO,KAAP;AACD,OANW,CAAZ;AAOAhB,MAAAA,QAAQ,CAACU,KAAK,CAACO,MAAP,CAAR;AACD,KAXD;AAYD,GAdD;;AAgBAzB,EAAAA,SAAS,CAAC;AAAA,WAAMS,IAAI,EAAV;AAAA,GAAD,EAAe,EAAf,CAAT;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEH,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,KAA3B,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,CADF;AAeD,CArCD;;cAAMF,gB;UACYH,U;;;AAsClB,IAAMwB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAE7B,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAPD;;eASeA,gB;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAhDMrB,gB;0BAuCAqB,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useFetcher, Fetcher } from 'use-fetcher-react';\nimport axios from 'axios';\n\nimport 'use-fetcher-react/dist/styles.css';\nimport '../index.css';\n\nconst ThreadsCountCard = () => {\n  const fetcher = useFetcher();\n  const [count, setCount] = useState(0);\n\n  const load = () => {\n    let request = axios.get('https://www.reddit.com/r/news/new.json?limit=100');\n    fetcher.fetch(request, result => {\n      console.log('data :', result);\n      let now = Date.now() / 1000;\n      let items = result.data.children.filter(child => {\n        let { created_utc } = child.data;\n        let seconds = now - created_utc;\n        console.log('m :', seconds / 60);\n        if (seconds <= 60 * 60 * 24) return true;\n        return false;\n      });\n      setCount(items.length);\n    });\n  }\n\n  useEffect(() => load(), []);\n\n  return (\n    <div className=\"dashboard-card\">\n      <Fetcher fetcher={fetcher}>\n        <div className=\"d-container\">\n          <div>\n            <h5 className=\"d-title\">New Posts in the last day</h5>\n            <span className=\"d-value\">{count}</span>\n          </div>\n          <div>\n\n          </div>\n        </div>\n      </Fetcher>\n    </div>\n  );\n}\n\nconst DashboardExample = () => {\n\n  return (\n    <div className=\"dashboard-container\">\n      <ThreadsCountCard />\n    </div>\n  );\n};\n\nexport default DashboardExample;\n"]}]}