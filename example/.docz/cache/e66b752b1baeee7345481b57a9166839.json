{"remainingRequest":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/thread-loader/dist/cjs.js??ref--5-1!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/source-map-loader/index.js!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/src/components/MinimalProgressExample.jsx","dependencies":[{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/src/components/MinimalProgressExample.jsx","mtime":1562870767625},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/cache-loader/dist/cjs.js","mtime":1562869367178},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/thread-loader/dist/cjs.js","mtime":1562869367900},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562869367050},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/source-map-loader/index.js","mtime":1562869367869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvbWVkaWEvY3lyaWFjLzBDQzUxNjZCMENDNTE2NkIvV29yay9yZWFjdC11c2UtZmV0Y2hlci9leGFtcGxlL3NyYy9jb21wb25lbnRzL01pbmltYWxQcm9ncmVzc0V4YW1wbGUuanN4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IHVzZUZldGNoZXIsIEZldGNoZXIgfSBmcm9tICd1c2UtZmV0Y2hlci1yZWFjdCc7CmltcG9ydCAndXNlLWZldGNoZXItcmVhY3QvZGlzdC9zdHlsZXMuY3NzJzsKaW1wb3J0ICcuLi9pbmRleC5jc3MnOwoKdmFyIE1pbmltYWxQcm9ncmVzc0V4YW1wbGUgPSBmdW5jdGlvbiBNaW5pbWFsUHJvZ3Jlc3NFeGFtcGxlKCkgewogIHZhciBmZXRjaGVyID0gdXNlRmV0Y2hlcih7CiAgICBtaW5EZWxheTogMzAwMCwKICAgIHByb2dyZXNzOiB7CiAgICAgIHNob3c6IHRydWUsCiAgICAgIHRpY2tEZWxheTogewogICAgICAgIG1pbjogMjAwLAogICAgICAgIG1heDogNDAwCiAgICAgIH0KICAgIH0KICB9KTsKCiAgdmFyIGRvU29tZXRoaW5nID0gZnVuY3Rpb24gZG9Tb21ldGhpbmcoKSB7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICByZWplY3QoJ3RoYXQgd2FzIG1lYW50IHRvIGhhcHBlbicpOwogICAgICB9LCAzMDAwKTsKICAgIH0pOwogIH07CgogIHZhciBsb2FkID0gZnVuY3Rpb24gbG9hZCgpIHsKICAgIGZldGNoZXIuaGFuZGxlKGRvU29tZXRoaW5nKCksIGZ1bmN0aW9uIChfKSB7fSk7CiAgfTsKCiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBsb2FkKCk7CiAgfSwgW10pOwogIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJ0ZXN0LWNvbnRhaW5lciIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRmV0Y2hlciwgewogICAgZmV0Y2hlcjogZmV0Y2hlciwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuIE1hZWNlbmFzIGZlcm1lbnR1bSBhY2N1bXNhbiBsb3JlbSwgaWQgdHJpc3RpcXVlIGVyYXQuIFV0IGVsZW1lbnR1bSBkdWkgbG9ib3J0aXMgZXggZWxlaWZlbmQgZWxlaWZlbmQuIEN1cmFiaXR1ciBzY2VsZXJpc3F1ZSBvZGlvIGFjIHRlbGx1cyB2b2x1dHBhdCwgbmVjIHRlbXBvciBqdXN0byB0cmlzdGlxdWUuIFZpdmFtdXMgdGluY2lkdW50IHNlbSBuZWMgb3JuYXJlIHRlbXBvci4gTWFlY2VuYXMgYXQgdGVsbHVzIGFjIGFyY3UgY29udmFsbGlzIHB1bHZpbmFyLiBDcmFzIGN1cnN1cywgbWFzc2EgdXQgdmFyaXVzIGxhb3JlZXQsIHNlbSBkdWkgZmF1Y2lidXMgbnVsbGEsIGluIGltcGVyZGlldCBsYWN1cyBudWxsYSB2aXRhZSBhbnRlLiBNYXVyaXMgbmVjIHNhcGllbiB0cmlzdGlxdWUsIHBsYWNlcmF0IHNhcGllbiB2ZWwsIHN1c2NpcGl0IG1hZ25hLiBDcmFzIHB1cnVzIHJpc3VzLCBibGFuZGl0IGF0IHF1YW0gcXVpcywgbHVjdHVzIGZldWdpYXQgbmlzbC4gRHVpcyB1bHRyaWNlcyBzZW1wZXIgZXJvcywgdmVsIHNhZ2l0dGlzIHNhcGllbiBwaGFyZXRyYSBpbi4gRnVzY2UgZXN0IG1hdXJpcywgcmhvbmN1cyBldCBtb2xlc3RpZSB1dCwgZmF1Y2lidXMgbm9uIHRvcnRvci4gVml2YW11cyBhY2N1bXNhbiBibGFuZGl0IGNvbnNlY3RldHVyLiIpKSk7Cn07CgpfX3NpZ25hdHVyZV9fKE1pbmltYWxQcm9ncmVzc0V4YW1wbGUsICJ1c2VGZXRjaGVye2ZldGNoZXJ9XG51c2VFZmZlY3R7fSIsIGZ1bmN0aW9uICgpIHsKICByZXR1cm4gW3VzZUZldGNoZXJdOwp9KTsKCnZhciBfZGVmYXVsdCA9IE1pbmltYWxQcm9ncmVzc0V4YW1wbGU7CmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0OwoKaWYgKHR5cGVvZiBNaW5pbWFsUHJvZ3Jlc3NFeGFtcGxlICE9PSAndW5kZWZpbmVkJyAmJiBNaW5pbWFsUHJvZ3Jlc3NFeGFtcGxlICYmIE1pbmltYWxQcm9ncmVzc0V4YW1wbGUgPT09IE9iamVjdChNaW5pbWFsUHJvZ3Jlc3NFeGFtcGxlKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKE1pbmltYWxQcm9ncmVzc0V4YW1wbGUpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1pbmltYWxQcm9ncmVzc0V4YW1wbGUsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJNaW5pbWFsUHJvZ3Jlc3NFeGFtcGxlIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9NaW5pbWFsUHJvZ3Jlc3NFeGFtcGxlLmpzeCIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihNaW5pbWFsUHJvZ3Jlc3NFeGFtcGxlLCAiTWluaW1hbFByb2dyZXNzRXhhbXBsZSIsICIvbWVkaWEvY3lyaWFjLzBDQzUxNjZCMENDNTE2NkIvV29yay9yZWFjdC11c2UtZmV0Y2hlci9leGFtcGxlL3NyYy9jb21wb25lbnRzL01pbmltYWxQcm9ncmVzc0V4YW1wbGUuanN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9tZWRpYS9jeXJpYWMvMENDNTE2NkIwQ0M1MTY2Qi9Xb3JrL3JlYWN0LXVzZS1mZXRjaGVyL2V4YW1wbGUvc3JjL2NvbXBvbmVudHMvTWluaW1hbFByb2dyZXNzRXhhbXBsZS5qc3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/src/components/MinimalProgressExample.jsx"],"names":["React","useEffect","useFetcher","Fetcher","MinimalProgressExample","fetcher","minDelay","progress","show","tickDelay","min","max","doSomething","Promise","resolve","reject","setTimeout","load","handle","_"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AAEA,OAAO,mCAAP;AACA,OAAO,cAAP;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,MAAMC,OAAO,GAAGH,UAAU,CAAC;AACzBI,IAAAA,QAAQ,EAAE,IADe;AAEzBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,GAAG,EAAE,GAAP;AAAYC,QAAAA,GAAG,EAAE;AAAjB;AAFH;AAFe,GAAD,CAA1B;;AAQA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,MAAAA,UAAU,CAAC,YAAM;AACfD,QAAAA,MAAM,CAAC,0BAAD,CAAN;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAJM,CAAP;AAKD,GAND;;AAQA,MAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBZ,IAAAA,OAAO,CAACa,MAAR,CAAeN,WAAW,EAA1B,EAA8B,UAAAO,CAAC,EAAI,CAAE,CAArC;AACD,GAFD;;AAIAlB,EAAAA,SAAS,CAAC;AAAA,WAAMgB,IAAI,EAAV;AAAA,GAAD,EAAe,EAAf,CAAT;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEZ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4sBADF,CADF,CADF;AAgBD,CAvCD;;cAAMD,sB;UACYF,U;;;eAwCHE,sB;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAzCMA,sB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useFetcher, Fetcher } from 'use-fetcher-react';\n\nimport 'use-fetcher-react/dist/styles.css';\nimport '../index.css';\n\nconst MinimalProgressExample = () => {\n  const fetcher = useFetcher({\n    minDelay: 3000,\n    progress: {\n      show: true,\n      tickDelay: { min: 200, max: 400 }\n    }\n  });\n\n  const doSomething = () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject('that was meant to happen');\n      }, 3000);\n    });\n  };\n\n  const load = () => {\n    fetcher.handle(doSomething(), _ => {});\n  };\n\n  useEffect(() => load(), []);\n\n  return (\n    <div className=\"test-container\">\n      <Fetcher fetcher={fetcher}>\n        <span>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas fermentum accumsan\n          lorem, id tristique erat. Ut elementum dui lobortis ex eleifend eleifend. Curabitur\n          scelerisque odio ac tellus volutpat, nec tempor justo tristique. Vivamus tincidunt sem nec\n          ornare tempor. Maecenas at tellus ac arcu convallis pulvinar. Cras cursus, massa ut varius\n          laoreet, sem dui faucibus nulla, in imperdiet lacus nulla vitae ante. Mauris nec sapien\n          tristique, placerat sapien vel, suscipit magna. Cras purus risus, blandit at quam quis,\n          luctus feugiat nisl. Duis ultrices semper eros, vel sagittis sapien pharetra in. Fusce est\n          mauris, rhoncus et molestie ut, faucibus non tortor. Vivamus accumsan blandit consectetur.\n        </span>\n      </Fetcher>\n    </div>\n  );\n};\n\nexport default MinimalProgressExample;\n"]}]}