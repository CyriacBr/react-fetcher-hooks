{"remainingRequest":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/@mdx-js/loader/index.js??ref--6-2!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/source-map-loader/index.js!/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/docs/index.mdx","dependencies":[{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/docs/index.mdx","mtime":1562283440917},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/cache-loader/dist/cjs.js","mtime":1561500846987},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1561500846970},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/@mdx-js/loader/index.js","mtime":1562272803404},{"path":"/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/node_modules/source-map-loader/index.js","mtime":1562188886889}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/cyriac/0CC5166B0CC5166B/Work/react-use-fetcher/example/docs/index.mdx"],"names":["React","mdx","Playground","MinimalExample","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport MinimalExample from '../src/components/MinimalExample';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <h2 {...{\n      \"id\": \"using-yarn\"\n    }}>{`Using yarn`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add 'use-fetcher-react'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-npm\"\n    }}>{`Using npm`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install 'use-fetcher-react'\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h1>\n    <p><inlineCode parentName=\"p\">{`'use-fetcher-react'`}</inlineCode>{` exposes a component `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` that you are supposed to wrap around your content.`}<br parentName=\"p\"></br>{`\n`}{`That components handle automatically these fetching status: idle, loading, error.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport { Fetcher } from ''use-fetcher-react'';\n\nconst MyComponent = () => {\n  return (\n    <div>\n      <Fetcher>\n        My content\n      </Fetcher>\n    </div>\n  );\n}\n`}</code></pre>\n    <p>{`But this won't do much in its own.`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`'use-fetcher-react'`}</inlineCode>{` also exposes `}<inlineCode parentName=\"p\">{`useFetcher`}</inlineCode>{` which return a Fetcher API. You can interact with it\ninside your component and any visual feedback will be handled by the `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` component, with the condition\nthat you pass the API as a prop.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React, { useEffect } from 'react';\nimport { useFetcher, Fetcher } from ''use-fetcher-react'';\n\nconst MyComponent = () => {\n  const fetcher = useFetcher();\n  useEffect(() => fetcher.setLoading(true), []);\n\n  return (\n    <div>\n      <Fetcher>\n        My content\n      </Fetcher>\n    </div>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"minimal-example\"\n    }}>{`Minimal Example`}</h2>\n    <p>{`Here's a minimal example of a component fetching being handled by `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{`.`}<br parentName=\"p\"></br>{`\n`}{`The component `}<strong parentName=\"p\">{`doesn't`}</strong>{` have to react to the HTTP response nor does it have to show any loading feeback.`}<br parentName=\"p\"></br>{`\n`}{`All of that is handled by `}<inlineCode parentName=\"p\">{`Fetcher`}</inlineCode>{` automatically.  `}</p>\n\n    <Playground __position={0} __code={'<MinimalExample />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      MinimalExample\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtKY9TQfl4jPLBvTJbojVldoPTgARyABdN9DgSRCNQYioFI8jfRVdiIPYQNJXQ6jTUVMFUF0FFjlOLDnAIRIsXYbh2GAdYogEZ5UCudoAAZ2CTGYsHaPdqxmDsWBnbSABZDPYAA2QzjPWMBgIAMW9aBEm0_hnEOBEHUwGChH4JYiGoSg4DMhEnOrFyaGcCAsMudgAEYrJM-RxMkqYAEE5iU9gIyg8gbCgdAw1QjklLEQroxkdgUQUmBuGAbC5KauB5C3GtgBK6ByuCAAyQbxkSeZKGaPqyoq7hZrlMBkMlAZUHadgAH4Nn6sMIyqq4poG1BMurKQZCrN8zBhdVjhgMAwigKYduq2rjry5dqwTQSCBwVzMhSK8CG6mtazYjiuN_dhNxXKRPu-37_u6qRXrOswvxAOiGM-dcaBYkGok4sjf3_OAsEA3QQIMMC8Kuz6ligvIYDPMAwC2AglnpuSslQ4STU1XD-LpuAYFc0cSoyJZhYIUWjjQqi5Xp81mclzYBHNUSX14qn7VcLABjsWX2m13W_TMbL2FxkiCYogrHu4GrVOrU3Falgr6YlqWdt4ixTYAbRiAhYCWQWCEsF5YAAXRdwWOdoR8ADlhwiE5xlDmBX093JBcZ5nJQjG27ZXWApi6ABHBkpOUw2IpPUcI2KQhbnuR5NGoMkJRgYYyoyHB5JmWJAQ-SJJETiLJBS4oPxXJ3lZwKeIxLsvWeOaJXCe-2gYsIOQ_9mBa5yock792ArgAEla5fu5T-Rx_Tix5An6slHYb2w_v9YugIPpzCjd7a3q8g4LgHAWO3pmr8FoCic0ZNXBoFBCAQGNZGBu2VoaEWysWpTwyF1FcQNGCRXcGIYAh8YDyCkHg1A8DtxIIyPAk6sZ1j33kLxC6WB8LXVuqEe6ZsiJ4zBhRXiqMorbFcGkIm1BSbAX0AwNe7B-CoBAfwK4_AfjFmqBkc0P4KIhXWPwVgGR8jUAUTIkAOkcAmJ0lo6s_ByjkH6DMbs_okBGL3vkcGGjYDXTJJQRIuY8gFAnJqSBRY_ilgsRYfgUQ0CGP4KobARNQlGMwPMcMEkIDwEMdIsJIBsJRJAAAPRSjgAATKY-JmS1Y5PyXZHAAAOHAdlSlGPlhglW5THH8FyWYnAKUGn8DVpaSIFSUpVNqfUkA6wjryFRio7wA9UCQBSKI1A4i9CgRAKpEAtAfRZAUUo00tBVYBNmDMfgkz5BnKAA`} mdxType=\"Playground\">\n  <MinimalExample mdxType=\"MinimalExample\" />\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}